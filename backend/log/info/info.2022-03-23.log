2022-03-23 07:58:37.266 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 11224 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 07:58:37.269 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 07:58:39.578 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 07:58:39.581 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 07:58:39.662 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.
2022-03-23 07:58:40.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$b5be6712] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:40.248 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:40.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$900db2b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:40.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:40.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:40.380 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$267f41e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:40.396 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$91ff438e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:40.992 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$8ac3fae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.039 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.148 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$78069df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$6447ae7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.173 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.176 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 07:58:41.188 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 07:58:41.503 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 07:58:41.503 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 07:58:41.503 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 07:58:41.503 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 07:58:41.503 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.514 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:41.521 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.162 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.178 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.179 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.199 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.205 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.206 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.259 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.311 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.312 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.341 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.343 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.346 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.371 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.387 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.406 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$8212c176] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.409 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$345f838f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ef76697e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.417 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.426 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$1641e0ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.431 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.434 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$641e5f05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.445 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.469 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.481 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.485 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.486 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.506 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 07:58:44.910 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 07:58:44.923 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 07:58:44.928 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 07:58:44.928 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 07:58:44.934 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 07:58:45.155 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 07:58:45.155 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7837 ms
2022-03-23 07:58:45.802 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 07:58:45.802 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 07:58:45.802 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 07:58:45.802 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 07:58:45.802 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 07:58:45.802 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 07:58:45.802 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 07:58:45.802 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 07:58:46.323 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 07:58:46.336 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 07:58:46.336 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 07:58:46.339 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 07:58:46.341 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 07:58:46.342 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647993526325'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 07:58:46.342 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 07:58:46.342 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 07:58:46.343 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@237cd264
2022-03-23 07:58:46.412 febs [main] INFO  p6spy - 2022-03-23 07:58:46 | 耗时 18 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 07:58:47.102 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 07:58:48.410 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 07:58:48.470 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 07:58:48.543 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 07:58:48.556 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 07:58:48.566 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 07:58:48.567 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 07:58:48.581 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 07:58:48.583 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 12.222 seconds (JVM running for 18.028)
2022-03-23 07:58:48.592 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 07:58:48.593 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 07:58:48.593 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 07:58:48.641 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 9 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 07:58:48.666 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 21 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 07:58:48.727 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 07:58:48.750 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 14 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 07:58:48.768 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 7 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 07:58:48.773 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 07:58:48.775 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 07:58:48.777 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 07:58:48.780 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 07:58:48.782 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 07:58:48.784 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 07:58:48.787 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 07:58:48.789 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 07:58:48.792 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 07:58:48.795 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 07:58:48.797 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 07:58:48.799 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 07:58:48.801 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 07:58:48.804 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 07:58:48.806 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 07:58:48.807 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 07:58:48.810 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 07:58:48.812 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 07:58:48.814 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 07:58:48.815 febs [main] INFO  p6spy - 2022-03-23 07:58:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 07:58:48.816 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 07:58:48.816 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 07:58:48.816 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 07:58:48.816 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 07:58:48.816 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T07:58:48.816
2022-03-23 07:58:49.176 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 07:58:49.176 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 07:58:49.190 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2022-03-23 07:58:49.484 febs [RMI TCP Connection(5)-192.168.42.78] INFO  p6spy - 2022-03-23 07:58:49 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 07:58:49.559 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 07:58:49.581 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 07:58:49.581 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647957822228"'s failed in-progress jobs.
2022-03-23 07:58:49.592 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647993526325 started.
2022-03-23 08:09:21.055 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 08:09:21.066 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 08:09:21.205 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T08:09:21.170+0800' WHERE username = 'lisi';
2022-03-23 08:09:21.210 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:09:21.216 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 15 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T08:09:21.170+0800' WHERE username = 'lisi';
2022-03-23 08:09:21.218 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:09:21.262 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 30 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-03-23T08:09:21.221+0800', '', '127.0.0.1' );
2022-03-23 08:09:21.268 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 35 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-03-23T08:09:21.222+0800', '', '127.0.0.1' );
2022-03-23 08:09:21.300 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 08:09:21.301 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 08:09:21.385 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:09:21.405 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-03-23 08:09:21.438 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:09:21.443 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-03-23 08:09:21.629 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:09:21.680 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 48 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 08:09:21.684 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 08:09:21.686 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 08:09:21.692 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 08:09:21.694 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 08:09:21 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 08:36:26.140 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647993526325 paused.
2022-03-23 08:36:26.141 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 08:36:26.147 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 08:36:26.147 febs [Thread-29] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 08:36:26.147 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647993526325 shutting down.
2022-03-23 08:36:26.147 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647993526325 paused.
2022-03-23 08:36:26.148 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647993526325 shutdown complete.
2022-03-23 08:36:26.151 febs [Thread-29] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 08:36:26.151 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 08:36:26.156 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 08:36:35.570 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 2144 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 08:36:35.600 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 08:36:36.444 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 08:36:36.446 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 08:36:36.503 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44ms. Found 0 repository interfaces.
2022-03-23 08:36:36.799 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$deafb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:36.907 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:36.988 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$db2dfb58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:36.995 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:36.998 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.008 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$719f8a87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$dd1f8c30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.386 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$d5e44384] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.403 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.407 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.498 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$c326e696] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.503 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.510 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$af67f721] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.517 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.519 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.521 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 08:36:37.528 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 08:36:37.697 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 08:36:37.697 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 08:36:37.697 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 08:36:37.697 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 08:36:37.697 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.707 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:37.714 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.309 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.346 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.348 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.354 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.355 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.398 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.444 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.471 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.473 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.499 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.500 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.503 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.527 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.528 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.541 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.560 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$cd330a18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.565 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$7f7fcc31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.569 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$3a96b220] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.575 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.578 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.583 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$6162294e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.591 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$af3ea7a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.612 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.614 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.636 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.649 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.660 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.674 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:36:38.991 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 08:36:39.004 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 08:36:39.009 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 08:36:39.009 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 08:36:39.014 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 08:36:39.131 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 08:36:39.131 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3494 ms
2022-03-23 08:36:39.665 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 08:36:39.666 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 08:36:39.666 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 08:36:39.666 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 08:36:39.666 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 08:36:39.666 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 08:36:39.666 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 08:36:39.666 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 08:36:40.149 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 08:36:40.161 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 08:36:40.161 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 08:36:40.164 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 08:36:40.166 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 08:36:40.166 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647995800150'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 08:36:40.166 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 08:36:40.167 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 08:36:40.168 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1479ed5a
2022-03-23 08:36:40.222 febs [main] INFO  p6spy - 2022-03-23 08:36:40 | 耗时 7 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 08:36:40.904 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 08:36:42.155 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 08:36:42.210 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 08:36:42.286 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 08:36:42.300 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 08:36:42.312 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 08:36:42.313 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 08:36:42.329 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 08:36:42.331 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.29 seconds (JVM running for 8.489)
2022-03-23 08:36:42.342 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 08:36:42.343 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 08:36:42.343 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 08:36:42.378 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 08:36:42.386 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:36:42.450 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 08:36:42.468 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 08:36:42.485 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 08:36:42.489 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:36:42.492 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 08:36:42.494 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 08:36:42.497 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 08:36:42.499 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:36:42.501 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 08:36:42.503 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 08:36:42.506 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 08:36:42.508 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:36:42.512 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 08:36:42.514 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 08:36:42.515 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 08:36:42.518 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:36:42.521 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 08:36:42.523 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 08:36:42.524 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 08:36:42.527 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:36:42.529 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 08:36:42.531 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 08:36:42.533 febs [main] INFO  p6spy - 2022-03-23 08:36:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 08:36:42.534 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 08:36:42.534 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 08:36:42.534 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 08:36:42.534 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 08:36:42.534 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T08:36:42.534
2022-03-23 08:36:43.037 febs [RMI TCP Connection(1)-192.168.42.78] INFO  p6spy - 2022-03-23 08:36:43 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 08:36:43.294 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 08:36:43.340 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 08:36:43.340 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647993526325"'s failed in-progress jobs.
2022-03-23 08:36:43.350 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647995800150 started.
2022-03-23 08:36:43.372 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 08:36:43.372 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 08:36:43.385 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-03-23 08:42:16.861 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:42:17.028 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 08:42:17 | 耗时 22 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 08:44:01.051 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:44:01.057 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 08:44:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 08:44:15.448 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:44:15.454 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 08:44:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 08:44:17.369 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:44:17.373 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 08:44:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 08:44:18.525 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:44:18.561 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 08:44:18 | 耗时 29 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 08:49:24.205 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647995800150 paused.
2022-03-23 08:49:24.206 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 08:49:24.211 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 08:49:24.212 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 08:49:24.212 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647995800150 shutting down.
2022-03-23 08:49:24.212 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647995800150 paused.
2022-03-23 08:49:24.213 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647995800150 shutdown complete.
2022-03-23 08:49:24.218 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 08:49:24.218 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 08:49:24.222 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 08:49:30.313 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 8432 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 08:49:30.316 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 08:49:31.232 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 08:49:31.243 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 08:49:31.289 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34ms. Found 0 repository interfaces.
2022-03-23 08:49:31.585 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$b5be6712] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:31.696 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:31.773 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$900db2b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:31.780 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:31.784 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:31.792 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$267f41e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:31.807 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$91ff438e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$8ac3fae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.201 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.280 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$78069df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$6447ae7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.302 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.306 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 08:49:32.313 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 08:49:32.494 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 08:49:32.494 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 08:49:32.494 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 08:49:32.494 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 08:49:32.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.504 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:32.511 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.067 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.073 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.078 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.096 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.098 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.106 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.141 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.183 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.185 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.205 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.206 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.230 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.232 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.254 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.254 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.256 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$8212c176] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$345f838f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ef76697e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.297 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$1641e0ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.309 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$641e5f05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.329 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.347 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.359 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.363 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.369 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.380 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 08:49:33.664 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 08:49:33.674 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 08:49:33.679 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 08:49:33.679 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 08:49:33.684 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 08:49:33.802 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 08:49:33.802 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3443 ms
2022-03-23 08:49:34.312 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 08:49:34.312 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 08:49:34.312 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 08:49:34.312 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 08:49:34.312 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 08:49:34.312 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 08:49:34.312 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 08:49:34.313 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 08:49:34.738 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 08:49:34.749 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 08:49:34.750 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 08:49:34.753 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 08:49:34.754 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 08:49:34.755 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647996574739'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 08:49:34.755 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 08:49:34.755 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 08:49:34.756 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@352e4b6d
2022-03-23 08:49:34.812 febs [main] INFO  p6spy - 2022-03-23 08:49:34 | 耗时 12 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 08:49:35.520 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 08:49:36.690 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 08:49:36.746 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 08:49:36.822 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 08:49:36.834 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 08:49:36.845 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 08:49:36.846 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 08:49:36.861 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 08:49:36.864 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.178 seconds (JVM running for 8.129)
2022-03-23 08:49:36.873 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 08:49:36.874 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 08:49:36.874 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 08:49:36.906 febs [main] INFO  p6spy - 2022-03-23 08:49:36 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 08:49:36.914 febs [main] INFO  p6spy - 2022-03-23 08:49:36 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:49:36.989 febs [main] INFO  p6spy - 2022-03-23 08:49:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 08:49:37.005 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 08:49:37.019 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 08:49:37.022 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:49:37.025 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 08:49:37.027 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 08:49:37.030 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 08:49:37.032 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:49:37.034 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 08:49:37.036 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 08:49:37.039 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 08:49:37.041 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:49:37.044 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 08:49:37.047 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 08:49:37.049 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 08:49:37.051 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:49:37.054 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 08:49:37.056 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 08:49:37.058 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 08:49:37.060 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 08:49:37.063 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 08:49:37.065 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 08:49:37.067 febs [main] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 08:49:37.068 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 08:49:37.068 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 08:49:37.068 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 08:49:37.068 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 08:49:37.068 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T08:49:37.068
2022-03-23 08:49:37.446 febs [RMI TCP Connection(1)-192.168.42.78] INFO  p6spy - 2022-03-23 08:49:37 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 08:49:37.449 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 08:49:37.449 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 08:49:37.462 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-03-23 08:49:37.836 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 08:49:37.847 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 08:49:37.847 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647995800150"'s failed in-progress jobs.
2022-03-23 08:49:37.856 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647996574739 started.
2022-03-23 08:52:17.095 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:52:17.187 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 08:52:17 | 耗时 17 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 08:52:18.152 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:52:18.162 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 08:52:18 | 耗时 4 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 08:55:46.170 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:55:46.284 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 08:55:46 | 耗时 40 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 08:55:46.400 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 08:55:46 | 耗时 36 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( '自攻钉', '', '盒', 5, 3, 'REQ-1647996946171', 35, '2022-03-23 08:55:46' );
2022-03-23 08:55:46.411 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 08:55:46 | 耗时 8 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( '墙砖', '40*20', '块', 104, 1, 'REQ-1647996946171', 20, '2022-03-23 08:55:46' );
2022-03-23 08:55:46.420 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 08:55:46 | 耗时 7 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( '油漆', '', '桶', 2, 1, 'REQ-1647996946171', 85, '2022-03-23 08:55:46' );
2022-03-23 08:55:46.436 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 08:55:46 | 耗时 11 ms | SQL 语句：
INSERT INTO goods_request ( num, user_id, content, step, create_date ) VALUES ( 'REQ-1647996946171', 2, '实验准备', 0, '2022-03-23 08:55:46' );
2022-03-23 08:55:46.472 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:55:46.476 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 08:55:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 08:55:46.480 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 08:55:46 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 08:55:51.924 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:55:51.932 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 08:55:51 | 耗时 4 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 08:58:32.653 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:58:32.670 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 08:58:32 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 08:58:32.671 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 08:58:32 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 08:58:33.512 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 08:58:33.519 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 08:58:33 | 耗时 3 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 09:00:44.723 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:00:44.729 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 09:00:44 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 09:00:44.731 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 09:00:44 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 09:29:25.538 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 09:29:25.626 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 09:29:25 | 耗时 15 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T09:29:25.600+0800' WHERE username = 'lisi';
2022-03-23 09:29:25.630 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 09:29:25 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:29:25.657 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 09:29:25 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-03-23T09:29:25.647+0800', '', '127.0.0.1' );
2022-03-23 09:29:25.678 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 09:29:25 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 09:29:25.721 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:29:25.732 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 09:29:25 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-03-23 09:29:25.893 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:29:25.898 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 09:29:25 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 09:29:25.900 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 09:29:25 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 09:29:25.902 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 09:29:25 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 09:29:25.903 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 09:29:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 09:29:25.905 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 09:29:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 09:29:28.153 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:29:28.153 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:29:28.159 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 09:29:28 | 耗时 3 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 09:29:28.188 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 09:29:28 | 耗时 21 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0;
2022-03-23 09:29:28.189 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 09:29:28 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, si.is_in, si.to_user_id, cy.`name` AS consumableName FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0 LIMIT 0,10;
2022-03-23 09:40:05.470 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647996574739 paused.
2022-03-23 09:40:05.470 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 09:40:05.485 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 09:40:05.485 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 09:40:05.485 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647996574739 shutting down.
2022-03-23 09:40:05.485 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647996574739 paused.
2022-03-23 09:40:05.486 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647996574739 shutdown complete.
2022-03-23 09:40:05.490 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 09:40:05.490 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 09:40:05.495 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 09:40:11.861 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 9620 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 09:40:11.865 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 09:40:12.974 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 09:40:12.975 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 09:40:13.031 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44ms. Found 0 repository interfaces.
2022-03-23 09:40:13.343 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$33b70597] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:13.457 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:13.538 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e06513b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:13.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:13.550 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:13.561 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a477e06a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:13.579 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$ff7e213] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:13.972 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$8bc9967] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:13.990 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:13.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.072 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.078 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$f5ff3c79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e2404d04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.095 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.097 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.100 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 09:40:14.107 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 09:40:14.279 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 09:40:14.279 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 09:40:14.279 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 09:40:14.279 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 09:40:14.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.297 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.907 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.910 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.914 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.936 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.944 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.945 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.946 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:14.983 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.023 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.045 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.047 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.071 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.072 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.075 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.099 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.100 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.114 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b5ffb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$b2582214] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.139 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$6d6f0803] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.148 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.154 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$943a7f31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.161 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e216fd8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.174 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.179 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.196 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.212 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.212 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.222 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.238 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:40:15.619 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 09:40:15.631 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 09:40:15.636 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 09:40:15.636 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 09:40:15.641 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 09:40:15.752 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 09:40:15.752 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3797 ms
2022-03-23 09:40:16.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 09:40:16.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 09:40:16.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 09:40:16.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 09:40:16.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 09:40:16.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 09:40:16.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 09:40:16.337 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 09:40:16.803 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 09:40:16.816 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 09:40:16.817 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 09:40:16.821 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 09:40:16.823 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 09:40:16.823 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647999616804'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 09:40:16.823 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 09:40:16.823 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 09:40:16.825 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1ead3c67
2022-03-23 09:40:16.911 febs [main] INFO  p6spy - 2022-03-23 09:40:16 | 耗时 3 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 09:40:17.502 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 09:40:18.854 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 09:40:18.906 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 09:40:18.982 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 09:40:18.995 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 09:40:19.004 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 09:40:19.006 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 09:40:19.021 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 09:40:19.024 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.651 seconds (JVM running for 8.601)
2022-03-23 09:40:19.033 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 09:40:19.034 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 09:40:19.034 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 09:40:19.064 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 09:40:19.071 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:40:19.132 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 09:40:19.150 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 9 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 09:40:19.164 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 09:40:19.168 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:40:19.170 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 09:40:19.173 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 09:40:19.176 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 09:40:19.178 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:40:19.180 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 09:40:19.183 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 09:40:19.186 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 09:40:19.188 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:40:19.191 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 09:40:19.194 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 09:40:19.195 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 09:40:19.198 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:40:19.200 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 09:40:19.202 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 09:40:19.204 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 09:40:19.205 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:40:19.207 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 09:40:19.210 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 09:40:19.211 febs [main] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 09:40:19.212 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 09:40:19.212 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 09:40:19.212 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 09:40:19.212 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 09:40:19.213 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T09:40:19.212
2022-03-23 09:40:19.679 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 09:40:19.679 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 09:40:19.680 febs [RMI TCP Connection(1)-192.168.42.78] INFO  p6spy - 2022-03-23 09:40:19 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 09:40:19.689 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-03-23 09:40:19.985 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 09:40:20.006 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 09:40:20.006 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647996574739"'s failed in-progress jobs.
2022-03-23 09:40:20.092 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647999616804 started.
2022-03-23 09:40:29.256 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:40:29.256 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:40:29.286 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 09:40:29 | 耗时 3 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 09:40:39.260 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:40:39.263 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:40:39.263 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 09:40:39 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 09:40:53.627 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:40:53.627 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:40:53.631 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 09:40:53 | 耗时 1 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 09:41:19.854 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647999616804 paused.
2022-03-23 09:41:19.855 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 09:41:19.867 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 09:41:19.867 febs [Thread-20] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 09:41:19.867 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647999616804 shutting down.
2022-03-23 09:41:19.867 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647999616804 paused.
2022-03-23 09:41:19.870 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647999616804 shutdown complete.
2022-03-23 09:41:19.875 febs [Thread-20] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 09:41:19.875 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 09:41:19.878 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 09:41:24.884 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 7664 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 09:41:24.887 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 09:41:25.796 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 09:41:25.798 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 09:41:25.862 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52ms. Found 0 repository interfaces.
2022-03-23 09:41:26.156 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$77fd27e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.355 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$524c7387] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.377 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8be02b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.397 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$543e045f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.888 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$4d02bbb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.905 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.990 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.996 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$3a455ec5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:26.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.006 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$26866f50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.014 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.018 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 09:41:27.025 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 09:41:27.198 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 09:41:27.198 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 09:41:27.198 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 09:41:27.198 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 09:41:27.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.209 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.812 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.818 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.821 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.846 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.850 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.857 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.858 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.859 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.892 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.910 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.930 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.931 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.955 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.976 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.977 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:27.979 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.003 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.015 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.033 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$44518247] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.036 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$f69e4460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.038 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$b1b52a4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.047 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$d880a17d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.056 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.058 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$265d1fd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.068 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.069 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.072 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.074 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.091 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.105 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.105 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.112 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 09:41:28.449 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 09:41:28.462 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 09:41:28.468 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 09:41:28.468 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 09:41:28.474 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 09:41:28.596 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 09:41:28.596 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3654 ms
2022-03-23 09:41:29.183 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 09:41:29.183 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 09:41:29.183 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 09:41:29.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 09:41:29.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 09:41:29.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 09:41:29.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 09:41:29.193 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 09:41:29.647 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 09:41:29.659 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 09:41:29.659 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 09:41:29.663 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 09:41:29.665 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 09:41:29.666 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647999689649'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 09:41:29.666 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 09:41:29.666 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 09:41:29.668 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7891cf3
2022-03-23 09:41:29.744 febs [main] INFO  p6spy - 2022-03-23 09:41:29 | 耗时 32 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 09:41:30.330 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 09:41:31.535 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 09:41:31.593 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 09:41:31.670 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 09:41:31.684 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 09:41:31.695 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 09:41:31.695 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 09:41:31.711 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 09:41:31.714 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.368 seconds (JVM running for 8.231)
2022-03-23 09:41:31.722 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 09:41:31.723 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 09:41:31.723 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 09:41:31.754 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 09:41:31.761 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:41:31.819 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 09:41:31.835 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 09:41:31.849 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 09:41:31.853 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:41:31.855 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 09:41:31.858 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 09:41:31.861 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 09:41:31.864 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:41:31.867 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 09:41:31.869 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 09:41:31.872 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 09:41:31.874 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:41:31.877 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 09:41:31.880 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 09:41:31.881 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 09:41:31.884 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:41:31.886 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 09:41:31.889 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 09:41:31.890 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 09:41:31.892 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:41:31.894 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 09:41:31.897 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 09:41:31.898 febs [main] INFO  p6spy - 2022-03-23 09:41:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 09:41:31.899 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 09:41:31.899 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 09:41:31.899 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 09:41:31.899 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 09:41:31.899 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T09:41:31.899
2022-03-23 09:41:32.136 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 09:41:32.136 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 09:41:32.149 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-03-23 09:41:32.462 febs [RMI TCP Connection(5)-192.168.42.78] INFO  p6spy - 2022-03-23 09:41:32 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 09:41:32.686 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 09:41:32.703 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 09:41:32.704 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647999616804"'s failed in-progress jobs.
2022-03-23 09:41:32.793 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647999689649 started.
2022-03-23 09:41:54.717 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:41:54.717 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:41:54.757 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 09:41:54 | 耗时 11 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 09:41:54.828 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 09:41:54 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-03-23 09:42:24.117 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:42:24.120 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:42:24.125 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 09:42:24 | 耗时 1 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 09:42:24.126 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 09:42:24 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-03-23 09:42:27.816 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:42:27.822 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 09:42:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-03-23 09:42:31.700 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:42:31.714 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 09:42:31 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 09:42:31.718 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 09:42:31 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 09:42:35.062 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:42:35.099 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 09:42:35 | 耗时 29 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 09:43:03.240 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:43:03.313 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 09:43:03 | 耗时 12 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 09:43:03.315 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 09:43:03 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 09:43:03.316 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 09:43:03 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 09:43:03.317 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 09:43:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 09:43:03.320 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 09:43:03 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 09:52:27.840 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:52:27.842 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:52:27.847 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 09:52:27 | 耗时 3 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 09:52:27.848 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 09:52:27 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-03-23 09:52:36.433 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 09:52:36.470 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 09:52:36 | 耗时 6 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T09:52:36.440+0800' WHERE username = 'admin';
2022-03-23 09:52:36.474 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 09:52:36 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 09:52:36.499 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 09:52:36 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-23T09:52:36.490+0800', '', '127.0.0.1' );
2022-03-23 09:52:36.529 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:52:36.544 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 09:52:36 | 耗时 6 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-23 09:52:36.697 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:52:36.703 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 09:52:36 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 09:52:36.705 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 09:52:36 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 09:52:36.707 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 09:52:36 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 09:52:36.708 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 09:52:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 09:52:36.710 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 09:52:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 09:54:05.296 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 09:54:05.305 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 09:54:05 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 09:54:05.307 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 09:54:05 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:02:05.778 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647999689649 paused.
2022-03-23 10:02:05.778 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 10:02:05.789 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 10:02:05.789 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 10:02:05.789 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647999689649 shutting down.
2022-03-23 10:02:05.789 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647999689649 paused.
2022-03-23 10:02:05.792 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647999689649 shutdown complete.
2022-03-23 10:02:05.796 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 10:02:05.796 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 10:02:05.799 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 10:02:09.184 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 9776 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 10:02:09.224 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 10:02:10.116 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 10:02:10.118 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 10:02:10.175 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36ms. Found 0 repository interfaces.
2022-03-23 10:02:10.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$4b6695d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:10.590 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:10.677 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$25b5e17a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:10.688 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:10.691 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:10.701 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bc2770a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:10.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$27a77252] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.112 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$206c29a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.213 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$daeccb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.223 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.228 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$f9efdd43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.237 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.238 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.240 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 10:02:11.247 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 10:02:11.409 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 10:02:11.409 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 10:02:11.409 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 10:02:11.409 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 10:02:11.409 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.419 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.427 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:11.996 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.005 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.007 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.026 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.033 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.034 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.068 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.114 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.165 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.193 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.194 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.226 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$17baf03a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.230 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$ca07b253] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.232 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$851e9842] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.245 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$abea0f70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.250 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.253 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$f9c68dc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.263 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.265 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.305 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.305 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.311 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.324 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:02:12.618 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 10:02:12.628 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 10:02:12.632 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 10:02:12.632 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 10:02:12.637 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 10:02:12.750 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 10:02:12.751 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3478 ms
2022-03-23 10:02:13.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 10:02:13.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 10:02:13.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 10:02:13.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 10:02:13.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 10:02:13.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 10:02:13.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 10:02:13.316 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 10:02:13.753 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 10:02:13.764 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 10:02:13.764 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 10:02:13.767 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 10:02:13.769 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 10:02:13.770 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1648000933754'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 10:02:13.770 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 10:02:13.770 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 10:02:13.771 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@323eecf8
2022-03-23 10:02:13.822 febs [main] INFO  p6spy - 2022-03-23 10:02:13 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 10:02:14.523 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 10:02:15.683 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 10:02:15.737 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 10:02:15.899 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 10:02:15.914 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 10:02:15.927 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 10:02:15.929 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 10:02:15.947 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 10:02:15.950 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.338 seconds (JVM running for 8.231)
2022-03-23 10:02:15.962 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 10:02:15.963 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 10:02:15.963 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 10:02:16.002 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 10:02:16.010 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:02:16.081 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 10:02:16.097 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 10:02:16.113 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 10:02:16.118 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:02:16.121 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 10:02:16.124 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 10:02:16.127 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 10:02:16.130 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:02:16.132 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 10:02:16.135 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 10:02:16.138 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 10:02:16.141 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:02:16.144 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 10:02:16.147 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 10:02:16.149 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 10:02:16.151 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:02:16.154 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 10:02:16.156 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 10:02:16.158 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 10:02:16.160 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:02:16.163 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 10:02:16.165 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 10:02:16.167 febs [main] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 10:02:16.167 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 10:02:16.168 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 10:02:16.168 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 10:02:16.168 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 10:02:16.168 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T10:02:16.168
2022-03-23 10:02:16.822 febs [RMI TCP Connection(4)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 10:02:16.822 febs [RMI TCP Connection(4)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 10:02:16.823 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-23 10:02:16 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 10:02:16.835 febs [RMI TCP Connection(4)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-03-23 10:02:16.914 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 10:02:16.946 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648000933754 started.
2022-03-23 10:02:31.952 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648000933754_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 10:02:31.952 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648000933754_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647999689649"'s failed in-progress jobs.
2022-03-23 10:02:32.779 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:02:32.870 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:02:32 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:02:32.875 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:02:32 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:02:37.562 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:02:37.587 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:02:37 | 耗时 17 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:03:36.120 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:03:36.125 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:03:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:03:36.126 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:03:36 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:03:49.395 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:03:49.413 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:03:49 | 耗时 15 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:03:58.131 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:03:58.133 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:03:58 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:06:10.866 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:06:10.874 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:06:10 | 耗时 5 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:13:18.937 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648000933754 paused.
2022-03-23 10:13:18.937 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 10:13:18.945 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 10:13:18.946 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 10:13:18.946 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648000933754 shutting down.
2022-03-23 10:13:18.946 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648000933754 paused.
2022-03-23 10:13:18.948 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648000933754 shutdown complete.
2022-03-23 10:13:18.951 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 10:13:18.952 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 10:13:18.958 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 10:13:25.781 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 2620 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 10:13:25.784 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 10:13:27.324 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 10:13:27.326 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 10:13:27.380 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
2022-03-23 10:13:27.682 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$72779eee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:27.805 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:27.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4cc6ea92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:27.911 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:27.915 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:27.925 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e33879c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:27.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$4eb87b6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.324 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$477d32be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.343 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.424 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.430 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$34bfd5d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.434 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.440 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$2100e65b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.447 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.452 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 10:13:28.459 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 10:13:28.646 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 10:13:28.646 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 10:13:28.647 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 10:13:28.647 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 10:13:28.647 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.658 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:28.665 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.249 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.251 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.363 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.387 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.412 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.415 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.436 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.438 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.469 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$3ecbf952] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.473 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$f118bb6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.475 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ac2fa15a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.481 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.487 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$d2fb1888] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$20d796e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.505 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.507 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.510 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.512 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.552 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.564 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:13:29.874 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 10:13:29.885 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 10:13:29.889 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 10:13:29.889 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 10:13:29.895 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 10:13:30.018 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 10:13:30.018 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4148 ms
2022-03-23 10:13:30.584 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 10:13:30.585 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 10:13:30.585 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 10:13:30.585 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 10:13:30.585 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 10:13:30.585 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 10:13:30.585 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 10:13:30.585 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 10:13:31.030 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 10:13:31.042 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 10:13:31.042 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 10:13:31.045 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 10:13:31.047 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 10:13:31.048 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1648001611031'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 10:13:31.048 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 10:13:31.048 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 10:13:31.049 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1554eaa4
2022-03-23 10:13:31.121 febs [main] INFO  p6spy - 2022-03-23 10:13:31 | 耗时 23 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 10:13:31.714 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 10:13:32.877 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 10:13:32.931 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 10:13:33.005 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 10:13:33.018 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 10:13:33.029 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 10:13:33.031 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 10:13:33.047 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 10:13:33.050 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.754 seconds (JVM running for 8.616)
2022-03-23 10:13:33.057 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 10:13:33.057 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 10:13:33.057 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 10:13:33.090 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 10:13:33.098 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:13:33.157 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 10:13:33.182 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 16 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 10:13:33.197 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 10:13:33.202 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:13:33.204 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 10:13:33.207 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 10:13:33.209 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 10:13:33.211 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:13:33.214 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 10:13:33.216 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 10:13:33.219 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 10:13:33.221 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:13:33.225 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 10:13:33.227 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 10:13:33.229 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 10:13:33.231 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:13:33.234 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 10:13:33.237 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 10:13:33.239 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 10:13:33.240 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:13:33.243 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 10:13:33.245 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 10:13:33.247 febs [main] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 10:13:33.247 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 10:13:33.247 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 10:13:33.247 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 10:13:33.247 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 10:13:33.248 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T10:13:33.248
2022-03-23 10:13:33.961 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 10:13:33.961 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 10:13:33.962 febs [RMI TCP Connection(1)-192.168.42.78] INFO  p6spy - 2022-03-23 10:13:33 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 10:13:33.975 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2022-03-23 10:13:34.010 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 10:13:34.067 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648001611031 started.
2022-03-23 10:13:49.050 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648001611031_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 10:13:49.050 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648001611031_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1648000933754"'s failed in-progress jobs.
2022-03-23 10:17:03.989 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:17:04.073 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:17:04 | 耗时 50 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:20:33.431 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:20:33.437 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 10:20:33 | 耗时 3 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:20:47.896 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:20:47.900 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:20:47 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:34:17.930 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648001611031 paused.
2022-03-23 10:34:17.930 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 10:34:17.936 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 10:34:17.936 febs [Thread-20] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 10:34:17.936 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648001611031 shutting down.
2022-03-23 10:34:17.936 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648001611031 paused.
2022-03-23 10:34:17.937 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648001611031 shutdown complete.
2022-03-23 10:34:17.941 febs [Thread-20] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 10:34:17.941 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 10:34:17.944 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 10:34:25.967 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 11084 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 10:34:25.971 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 10:34:26.956 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 10:34:26.957 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 10:34:27.017 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46ms. Found 0 repository interfaces.
2022-03-23 10:34:27.525 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$e5f329bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:27.638 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:27.757 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c0427563] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:27.766 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:27.769 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:27.780 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$56b40492] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:27.805 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c234063b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$baf8bd8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.224 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.228 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.311 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$a83b60a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$947c712c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.335 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.336 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.339 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 10:34:28.347 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 10:34:28.520 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 10:34:28.521 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 10:34:28.521 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 10:34:28.521 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 10:34:28.521 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.531 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:28.538 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.183 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.213 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.214 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.231 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.233 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.280 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.341 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.367 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.394 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.395 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.406 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.425 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b2478423] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$6494463c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.432 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$1fab2c2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.440 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.446 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$4676a359] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.452 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$945321b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.464 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.468 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.470 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.505 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.509 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.509 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.516 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.531 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:34:29.837 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 10:34:29.848 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 10:34:29.852 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 10:34:29.853 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 10:34:29.857 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 10:34:29.974 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 10:34:29.975 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3926 ms
2022-03-23 10:34:30.496 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 10:34:30.497 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 10:34:30.497 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 10:34:30.497 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 10:34:30.497 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 10:34:30.497 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 10:34:30.497 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 10:34:30.497 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 10:34:30.967 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 10:34:30.980 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 10:34:30.980 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 10:34:30.983 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 10:34:30.984 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 10:34:30.985 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1648002870968'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 10:34:30.985 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 10:34:30.985 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 10:34:30.986 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3bb4c2b2
2022-03-23 10:34:31.034 febs [main] INFO  p6spy - 2022-03-23 10:34:31 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 10:34:31.660 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 10:34:33.142 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 10:34:33.290 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 10:34:33.372 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 10:34:33.385 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 10:34:33.395 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 10:34:33.397 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 10:34:33.411 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 10:34:33.413 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 8.051 seconds (JVM running for 9.138)
2022-03-23 10:34:33.422 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 10:34:33.422 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 10:34:33.422 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 10:34:33.468 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 17 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 10:34:33.476 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:34:33.536 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 10:34:33.551 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 10:34:33.566 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 10:34:33.570 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:34:33.572 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 10:34:33.575 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 10:34:33.578 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 10:34:33.581 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:34:33.583 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 10:34:33.585 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 10:34:33.588 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 10:34:33.591 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:34:33.597 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 10:34:33.600 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 10:34:33.601 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 10:34:33.604 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:34:33.607 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 10:34:33.610 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 10:34:33.612 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 10:34:33.614 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:34:33.616 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 10:34:33.619 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 10:34:33.620 febs [main] INFO  p6spy - 2022-03-23 10:34:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 10:34:33.621 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 10:34:33.621 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 10:34:33.621 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 10:34:33.621 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 10:34:33.621 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T10:34:33.621
2022-03-23 10:34:34.100 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 10:34:34.100 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 10:34:34.111 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-03-23 10:34:34.376 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 10:34:34.389 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 10:34:34.389 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1648001611031"'s failed in-progress jobs.
2022-03-23 10:34:34.399 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648002870968 started.
2022-03-23 10:34:34.446 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-23 10:34:34 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 10:35:44.045 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:35:44.136 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:35:44 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:35:44.141 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:35:44 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:35:45.025 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:35:45.045 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:35:45 | 耗时 12 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:39:41.658 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:39:41.668 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 10:39:41 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:39:41.670 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 10:39:41 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:40:53.634 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:40:53.672 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:40:53 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:40:53.674 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:40:53 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:40:54.566 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:40:54.575 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:40:54 | 耗时 7 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:40:55.865 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:40:55.995 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:40:55 | 耗时 110 ms | SQL 语句：
UPDATE goods_request SET step=2 WHERE ID = 1;
2022-03-23 10:40:56.034 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:40:56.040 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:40:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:40:56.041 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:40:56 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:41:02.518 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 10:41:02.543 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:41:02 | 耗时 7 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T10:41:02.525+0800' WHERE username = 'lisi';
2022-03-23 10:41:02.547 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:41:02 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:41:02.570 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:41:02 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-03-23T10:41:02.561+0800', '', '127.0.0.1' );
2022-03-23 10:41:02.590 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:41:02 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 10:41:02.633 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:41:02.644 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:41:02 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-03-23 10:41:02.797 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:41:02.812 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:41:02 | 耗时 12 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 10:41:02.814 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:41:02 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:41:02.816 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:41:02 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:41:02.818 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:41:02 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 10:41:02.820 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:41:02 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 10:41:05.379 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:41:05.385 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:41:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-03-23 10:41:05.386 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:41:05 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-03-23 10:41:06.799 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:41:06.801 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:41:06.807 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:41:06 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 10:41:06.814 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:41:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-03-23 10:41:07.980 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:41:07.985 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:41:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-03-23 10:41:07.986 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:41:07 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-03-23 10:41:09.562 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:41:09.565 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:41:09 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:41:56.830 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:41:56.833 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 10:41:56 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:42:05.171 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:42:05.174 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 10:42:05 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 10:42:32.383 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:42:32.462 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:42:32 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 10:42:32.521 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:42:32 | 耗时 9 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( '可口可乐', '300ml', '罐', 1, 1, 'REQ-1648003352384', 3, '2022-03-23 10:42:32' );
2022-03-23 10:42:32.536 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:42:32 | 耗时 10 ms | SQL 语句：
INSERT INTO goods_request ( num, user_id, content, step, create_date ) VALUES ( 'REQ-1648003352384', 2, '喝可乐', 0, '2022-03-23 10:42:32' );
2022-03-23 10:42:32.565 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:42:32.570 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:42:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-03-23 10:42:32.572 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:42:32 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-03-23 10:42:42.333 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 10:42:42.405 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:42:42 | 耗时 69 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T10:42:42.334+0800' WHERE username = 'admin';
2022-03-23 10:42:42.409 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:42:42 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:42:42.422 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:42:42 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-23T10:42:42.418+0800', '', '127.0.0.1' );
2022-03-23 10:42:42.446 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:42:42.450 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:42:42 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-23 10:42:42.579 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:42:42.587 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:42:42 | 耗时 6 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 10:42:42.589 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:42:42 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:42:42.591 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:42:42 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:42:42.593 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:42:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 10:42:42.595 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:42:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 10:42:44.853 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:42:44.858 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:42:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:42:44.859 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:42:44 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:42:46.499 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:42:46.509 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:42:46 | 耗时 8 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:43:42.404 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:43:42.406 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:43:42 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:43:44.246 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:43:44.273 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:43:44 | 耗时 19 ms | SQL 语句：
UPDATE goods_request SET step=1 WHERE ID = 2;
2022-03-23 10:43:44.276 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:43:44 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 14;
2022-03-23 10:45:48.351 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648002870968 paused.
2022-03-23 10:45:48.352 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 10:45:48.357 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 10:45:48.357 febs [Thread-20] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 10:45:48.357 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648002870968 shutting down.
2022-03-23 10:45:48.357 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648002870968 paused.
2022-03-23 10:45:48.359 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648002870968 shutdown complete.
2022-03-23 10:45:48.362 febs [Thread-20] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 10:45:48.363 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 10:45:48.366 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 10:45:54.147 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 8044 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 10:45:54.151 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 10:45:55.150 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 10:45:55.152 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 10:45:55.199 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 repository interfaces.
2022-03-23 10:45:55.493 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$f8a28d5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:55.609 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:55.688 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d2f1d902] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:55.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:55.699 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:55.709 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69636831] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:55.725 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$d4e369da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.109 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$cda8212e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.214 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$baeac440] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.224 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$a72bd4cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.237 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.238 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.241 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 10:45:56.248 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 10:45:56.419 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 10:45:56.419 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 10:45:56.419 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 10:45:56.419 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 10:45:56.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:56.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.028 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.035 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.038 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.040 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.059 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.060 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.067 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.068 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.069 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.122 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.147 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.170 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.171 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.194 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.199 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.222 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.223 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.224 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.236 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.255 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$c4f6e7c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.258 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$7743a9db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$325a8fca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$592606f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.281 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$a7028551] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.293 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:45:57.665 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 10:45:57.675 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 10:45:57.678 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 10:45:57.679 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 10:45:57.684 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 10:45:57.806 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 10:45:57.806 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3533 ms
2022-03-23 10:45:58.312 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 10:45:58.313 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 10:45:58.314 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 10:45:58.314 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 10:45:58.314 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 10:45:58.314 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 10:45:58.314 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 10:45:58.314 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 10:45:58.774 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 10:45:58.785 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 10:45:58.785 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 10:45:58.787 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 10:45:58.789 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 10:45:58.790 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1648003558775'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 10:45:58.790 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 10:45:58.790 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 10:45:58.791 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6f921e32
2022-03-23 10:45:58.838 febs [main] INFO  p6spy - 2022-03-23 10:45:58 | 耗时 2 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 10:45:59.406 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 10:46:00.607 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 10:46:00.664 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 10:46:00.742 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 10:46:00.756 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 10:46:00.766 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 10:46:00.767 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 10:46:00.782 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 10:46:00.784 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.218 seconds (JVM running for 8.185)
2022-03-23 10:46:00.792 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 10:46:00.793 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 10:46:00.793 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 10:46:00.829 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 7 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 10:46:00.837 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:46:00.899 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 10:46:00.957 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 49 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 10:46:00.972 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 10:46:00.975 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:46:00.978 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 10:46:00.981 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 10:46:00.985 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 10:46:00.988 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:46:00.990 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 10:46:00.992 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 10:46:00.995 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 10:46:00.998 febs [main] INFO  p6spy - 2022-03-23 10:46:00 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:46:01.001 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 10:46:01.004 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 10:46:01.005 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 10:46:01.007 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:46:01.009 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 10:46:01.012 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 10:46:01.014 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 10:46:01.016 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:46:01.018 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 10:46:01.021 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 10:46:01.022 febs [main] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 10:46:01.023 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 10:46:01.023 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 10:46:01.023 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 10:46:01.023 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 10:46:01.023 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T10:46:01.023
2022-03-23 10:46:01.699 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 10:46:01.699 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 10:46:01.700 febs [RMI TCP Connection(4)-192.168.42.78] INFO  p6spy - 2022-03-23 10:46:01 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 10:46:01.712 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-03-23 10:46:01.750 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 10:46:01.762 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 10:46:01.762 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1648002870968"'s failed in-progress jobs.
2022-03-23 10:46:01.775 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648003558775 started.
2022-03-23 10:46:26.969 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:46:27.067 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:46:27 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:46:27.072 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:46:27 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:46:29.771 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:46:29.793 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:46:29 | 耗时 13 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:46:37.849 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:46:37.852 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:46:37 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:46:48.348 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 10:46:48.384 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:46:48 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T10:46:48.356+0800' WHERE username = 'lisi';
2022-03-23 10:46:48.386 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:46:48 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:46:48.408 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:46:48 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-03-23T10:46:48.400+0800', '', '127.0.0.1' );
2022-03-23 10:46:48.427 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:46:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 10:46:48.468 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:46:48.477 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:46:48 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-03-23 10:46:48.634 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:46:48.650 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:46:48 | 耗时 13 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 10:46:48.652 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:46:48 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:46:48.653 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:46:48 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:46:48.655 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:46:48 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 10:46:48.658 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:46:48 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 10:46:50.209 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:46:50.210 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:46:50.234 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:46:50 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 10:46:50.243 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 10:46:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-03-23 10:46:57.428 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 10:46:57.438 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:46:57 | 耗时 7 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T10:46:57.430+0800' WHERE username = 'admin';
2022-03-23 10:46:57.440 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:46:57 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:46:57.453 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:46:57 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-23T10:46:57.449+0800', '', '127.0.0.1' );
2022-03-23 10:46:57.481 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:46:57.484 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:46:57 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-23 10:46:57.610 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:46:57.617 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:46:57 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 10:46:57.619 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:46:57 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:46:57.621 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:46:57 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:46:57.622 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:46:57 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 10:46:57.624 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:46:57 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 10:47:00.026 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:47:00.056 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 10:47:00 | 耗时 14 ms | SQL 语句：
SELECT COUNT(1) FROM stock_out so LEFT JOIN student_info si ON (si.id = so.user_id) WHERE 1 = 1;
2022-03-23 10:47:00.057 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 10:47:00 | 耗时 0 ms | SQL 语句：
SELECT so.id, so.num, so.user_id AS userId, so.price, so.custodian, so.handler, so.create_date AS createDate, so.apply_id AS applyId, si.`name` AS userName, si.team FROM stock_out so LEFT JOIN student_info si ON ( si.id = so.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:47:05.467 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:47:05.480 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:47:05 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:47:05.482 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:47:05 | 耗时 1 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:47:06.930 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:47:06.941 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:47:06 | 耗时 8 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:47:14.139 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:47:14.141 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:47:14 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:47:20.321 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:47:20.323 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:47:20 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 10:47:22.081 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:47:22.084 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 10:47:22 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:47:24.852 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:47:24.855 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:47:24 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:48:30.035 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:48:30.038 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:48:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:48:30.040 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:48:30 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:48:30.821 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:48:30.824 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 10:48:30 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:49:30.513 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:49:30.540 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:49:30 | 耗时 23 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:49:30.541 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:49:30 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:49:31.847 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:49:31.853 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:49:31 | 耗时 4 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:50:25.762 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:50:25.765 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:50:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:50:25.767 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:50:25 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:50:26.508 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:50:26.511 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:50:26 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:50:38.058 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:50:38.077 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 10:50:38 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:50:38.078 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 10:50:38 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:50:39.821 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:50:39.843 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:50:39 | 耗时 18 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:50:41.612 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:50:41.661 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:50:41 | 耗时 40 ms | SQL 语句：
UPDATE goods_request SET step=1 WHERE ID = 2;
2022-03-23 10:50:41.667 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:50:41 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 14;
2022-03-23 10:51:40.708 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:51:40.712 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:51:40 | 耗时 0 ms | SQL 语句：
UPDATE goods_request SET step=1 WHERE ID = 2;
2022-03-23 10:51:40.714 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:51:40 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 14;
2022-03-23 10:52:56.043 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648003558775 paused.
2022-03-23 10:52:56.044 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 10:52:56.052 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 10:52:56.053 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 10:52:56.053 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648003558775 shutting down.
2022-03-23 10:52:56.053 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648003558775 paused.
2022-03-23 10:52:56.055 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648003558775 shutdown complete.
2022-03-23 10:52:56.063 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 10:52:56.063 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 10:52:56.066 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 10:53:01.291 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 9360 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 10:53:01.319 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 10:53:02.161 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 10:53:02.162 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 10:53:02.218 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44ms. Found 0 repository interfaces.
2022-03-23 10:53:02.506 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$49a31a9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:02.618 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:02.693 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$23f2663e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:02.701 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:02.703 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:02.712 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ba63f56d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:02.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$25e3f716] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.097 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$1ea8ae6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.114 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.117 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$beb517c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.206 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.211 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$f82c6207] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.219 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.221 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.223 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 10:53:03.230 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 10:53:03.407 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 10:53:03.407 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 10:53:03.407 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 10:53:03.407 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 10:53:03.407 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.419 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:03.427 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.038 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.041 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.045 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.069 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.073 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.080 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.081 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.136 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.160 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.161 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.185 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.209 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.212 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.235 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.236 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.249 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$15f774fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$c8443717] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$835b1d06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.281 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.285 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$aa269434] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.293 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$f803128d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.303 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.307 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.309 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.338 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.343 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.343 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.363 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:04.686 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 10:53:04.697 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 10:53:04.701 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 10:53:04.702 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 10:53:04.707 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 10:53:04.817 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 10:53:04.817 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3460 ms
2022-03-23 10:53:05.406 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 10:53:05.406 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 10:53:05.406 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 10:53:05.406 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 10:53:05.406 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 10:53:05.406 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 10:53:05.406 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 10:53:05.406 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 10:53:05.826 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 10:53:05.839 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 10:53:05.839 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 10:53:05.842 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 10:53:05.845 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 10:53:05.846 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1648003985828'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 10:53:05.846 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 10:53:05.846 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 10:53:05.848 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@72a0a60d
2022-03-23 10:53:05.898 febs [main] INFO  p6spy - 2022-03-23 10:53:05 | 耗时 3 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 10:53:06.487 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 10:53:07.792 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 10:53:07.862 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 10:53:07.960 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 10:53:07.978 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 10:53:07.997 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 10:53:07.999 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 10:53:08.015 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 10:53:08.018 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.286 seconds (JVM running for 8.185)
2022-03-23 10:53:08.029 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 10:53:08.030 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 10:53:08.030 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 10:53:08.067 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 10:53:08.074 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:08.145 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 10:53:08.163 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:08.177 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 10:53:08.184 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:08.187 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 10:53:08.189 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:08.193 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 10:53:08.195 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:08.198 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 10:53:08.201 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:08.204 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 10:53:08.207 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:08.211 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 10:53:08.213 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:08.215 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 10:53:08.218 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:08.221 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 10:53:08.223 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:08.225 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 10:53:08.228 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:08.230 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 10:53:08.232 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:08.234 febs [main] INFO  p6spy - 2022-03-23 10:53:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 10:53:08.235 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 10:53:08.235 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 10:53:08.235 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 10:53:08.235 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 10:53:08.236 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T10:53:08.235
2022-03-23 10:53:08.792 febs [RMI TCP Connection(7)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 10:53:08.792 febs [RMI TCP Connection(7)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 10:53:08.804 febs [RMI TCP Connection(7)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-03-23 10:53:08.975 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 10:53:08.998 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648003985828 started.
2022-03-23 10:53:09.113 febs [RMI TCP Connection(9)-192.168.42.78] INFO  p6spy - 2022-03-23 10:53:09 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 10:53:24.016 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648003985828_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 10:53:24.017 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648003985828_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1648003558775"'s failed in-progress jobs.
2022-03-23 10:53:25.959 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648003985828 paused.
2022-03-23 10:53:25.959 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 10:53:25.965 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 10:53:25.965 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 10:53:25.965 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648003985828 shutting down.
2022-03-23 10:53:25.966 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648003985828 paused.
2022-03-23 10:53:25.968 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648003985828 shutdown complete.
2022-03-23 10:53:25.973 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 10:53:25.974 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 10:53:25.979 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 10:53:31.642 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 8132 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 10:53:31.645 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 10:53:32.517 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 10:53:32.520 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 10:53:32.588 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52ms. Found 0 repository interfaces.
2022-03-23 10:53:32.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$fc4346f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:32.991 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d692929c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.099 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.146 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.162 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6d0421cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$d8842374] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$d148dac8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.640 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.644 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.734 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$be8b7dda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.738 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$aacc8e65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.753 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.755 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 10:53:33.763 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 10:53:33.947 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 10:53:33.947 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 10:53:33.947 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 10:53:33.947 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 10:53:33.947 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.957 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:33.969 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.552 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.554 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.556 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.575 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.587 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.590 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.629 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.653 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.699 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.700 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.703 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.729 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.757 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.788 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.789 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.790 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.803 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$c897a15c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.828 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$7ae46375] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.831 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$35fb4964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.842 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.846 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$5cc6c092] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.861 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.863 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$aaa33eeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.881 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.883 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.888 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.890 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.909 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.922 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.928 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.928 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:34.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:53:35.299 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 10:53:35.308 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 10:53:35.312 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 10:53:35.312 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 10:53:35.316 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 10:53:35.432 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 10:53:35.432 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3721 ms
2022-03-23 10:53:35.965 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 10:53:35.965 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 10:53:35.965 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 10:53:35.966 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 10:53:35.966 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 10:53:35.966 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 10:53:35.966 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 10:53:35.966 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 10:53:36.427 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 10:53:36.438 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 10:53:36.438 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 10:53:36.442 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 10:53:36.444 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 10:53:36.444 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1648004016428'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 10:53:36.444 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 10:53:36.444 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 10:53:36.445 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@220be130
2022-03-23 10:53:36.494 febs [main] INFO  p6spy - 2022-03-23 10:53:36 | 耗时 3 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 10:53:37.087 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 10:53:38.387 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 10:53:38.441 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 10:53:38.520 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 10:53:38.534 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 10:53:38.544 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 10:53:38.545 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 10:53:38.559 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 10:53:38.561 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.413 seconds (JVM running for 8.646)
2022-03-23 10:53:38.571 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 10:53:38.572 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 10:53:38.573 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 10:53:38.607 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 10:53:38.614 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:38.676 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 10:53:38.689 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:38.703 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 10:53:38.707 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:38.710 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 10:53:38.713 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:38.716 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 10:53:38.718 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:38.720 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 10:53:38.723 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:38.725 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 10:53:38.727 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:38.731 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 10:53:38.733 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:38.735 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 10:53:38.737 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:38.739 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 10:53:38.741 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:38.743 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 10:53:38.745 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:53:38.748 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 10:53:38.750 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 10:53:38.751 febs [main] INFO  p6spy - 2022-03-23 10:53:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 10:53:38.752 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 10:53:38.752 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 10:53:38.752 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 10:53:38.752 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 10:53:38.753 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T10:53:38.752
2022-03-23 10:53:39.341 febs [RMI TCP Connection(4)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 10:53:39.342 febs [RMI TCP Connection(4)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 10:53:39.342 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-23 10:53:39 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 10:53:39.354 febs [RMI TCP Connection(4)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-03-23 10:53:39.530 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 10:53:39.555 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648004016428 started.
2022-03-23 10:53:52.650 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:53:52.731 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:53:52 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:53:52.735 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:53:52 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:53:53.703 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:53:53.715 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 10:53:53 | 耗时 4 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:53:54.563 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648004016428_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 10:53:54.563 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648004016428_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1648003985828"'s failed in-progress jobs.
2022-03-23 10:53:58.321 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:53:58.372 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:53:58 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 14;
2022-03-23 10:53:58.404 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:53:58 | 耗时 25 ms | SQL 语句：
UPDATE goods_request SET step=1 WHERE ID = 2;
2022-03-23 10:55:09.182 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:55:09.189 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:55:09 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:55:09.190 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:55:09 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:55:09.963 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:55:10.036 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:55:10 | 耗时 70 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:55:11.054 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:55:11.059 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:55:11 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 2;
2022-03-23 10:55:11.075 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:55:11 | 耗时 14 ms | SQL 语句：
UPDATE goods_request SET step=1 WHERE ID = 2;
2022-03-23 10:55:40.449 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648004016428 paused.
2022-03-23 10:55:40.450 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 10:55:40.457 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 10:55:40.458 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 10:55:40.458 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648004016428 shutting down.
2022-03-23 10:55:40.458 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648004016428 paused.
2022-03-23 10:55:40.462 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648004016428 shutdown complete.
2022-03-23 10:55:40.466 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 10:55:40.467 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 10:55:40.470 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 10:55:45.658 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 3800 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 10:55:45.659 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 10:55:46.590 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 10:55:46.601 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 10:55:46.648 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35ms. Found 0 repository interfaces.
2022-03-23 10:55:46.945 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$315d6192] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.062 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.140 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bacad36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.152 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.160 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a21e3c65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$d9e3e0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.554 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$662f562] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.571 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.575 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.658 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.664 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$f3a59874] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.668 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.673 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$dfe6a8ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.682 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.683 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.686 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 10:55:47.692 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 10:55:47.865 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 10:55:47.865 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 10:55:47.865 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 10:55:47.865 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 10:55:47.865 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.875 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:47.884 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.459 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.461 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.493 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.548 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.572 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.573 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.575 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.595 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.597 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.620 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.621 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.624 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.647 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.649 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.649 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.680 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$fdb1bbf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.683 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$affe7e0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.685 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$6b1563fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.692 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.694 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.699 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$91e0db2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.703 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.705 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$dfbd5985] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.716 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.721 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.724 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.741 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.754 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.757 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.758 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.764 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:48.776 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 10:55:49.064 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 10:55:49.074 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 10:55:49.079 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 10:55:49.079 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 10:55:49.085 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 10:55:49.204 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 10:55:49.205 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3502 ms
2022-03-23 10:55:49.737 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 10:55:49.737 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 10:55:49.737 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 10:55:49.737 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 10:55:49.737 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 10:55:49.737 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 10:55:49.737 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 10:55:49.737 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 10:55:50.185 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 10:55:50.196 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 10:55:50.196 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 10:55:50.199 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 10:55:50.201 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 10:55:50.202 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1648004150186'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 10:55:50.202 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 10:55:50.202 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 10:55:50.203 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@42db955e
2022-03-23 10:55:50.249 febs [main] INFO  p6spy - 2022-03-23 10:55:50 | 耗时 3 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 10:55:50.838 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 10:55:52.002 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 10:55:52.058 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 10:55:52.134 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 10:55:52.149 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 10:55:52.159 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 10:55:52.159 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 10:55:52.173 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 10:55:52.176 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.107 seconds (JVM running for 8.076)
2022-03-23 10:55:52.185 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 10:55:52.186 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 10:55:52.186 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 10:55:52.219 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 10:55:52.226 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:55:52.289 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 10:55:52.317 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 17 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 10:55:52.347 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 18 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 10:55:52.361 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:55:52.363 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 10:55:52.366 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 10:55:52.369 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 10:55:52.371 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:55:52.373 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 10:55:52.376 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 10:55:52.379 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 10:55:52.382 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:55:52.385 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 10:55:52.387 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 10:55:52.389 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 10:55:52.392 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:55:52.394 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 10:55:52.408 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 12 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 10:55:52.410 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 10:55:52.412 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:55:52.414 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 10:55:52.416 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 10:55:52.418 febs [main] INFO  p6spy - 2022-03-23 10:55:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 10:55:52.419 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 10:55:52.419 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 10:55:52.419 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 10:55:52.419 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 10:55:52.419 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T10:55:52.419
2022-03-23 10:55:52.704 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 10:55:52.705 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 10:55:52.717 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-03-23 10:55:53.039 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-23 10:55:53 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 10:55:53.146 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 10:55:53.169 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648004150186 started.
2022-03-23 10:56:08.177 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648004150186_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 10:56:08.178 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648004150186_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1648004016428"'s failed in-progress jobs.
2022-03-23 10:56:20.004 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:20.082 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:56:20 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:56:20.087 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:56:20 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:56:22.597 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:22.615 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:56:22 | 耗时 9 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:56:29.361 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:29.365 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 10:56:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:56:29.366 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 10:56:29 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:56:30.632 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:30.635 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:56:30 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 10:56:31.926 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:31.964 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:56:31 | 耗时 14 ms | SQL 语句：
UPDATE goods_request SET step=1 WHERE ID = 2;
2022-03-23 10:56:32.020 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:56:32 | 耗时 7 ms | SQL 语句：
INSERT INTO stock_out ( num, user_id, price, custodian, handler, create_date, apply_id ) VALUES ( 'OUT-1648004192010', 2, 3, '管理员', '管理员', '2022-03-23 10:56:31', 2 );
2022-03-23 10:56:32.073 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:56:32 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE name = '可口可乐' AND is_in = 0;
2022-03-23 10:56:32.078 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:56:32 | 耗时 0 ms | SQL 语句：
UPDATE stock_info SET amount=11 WHERE ID = 22;
2022-03-23 10:56:32.100 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:56:32 | 耗时 16 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in, to_user_id, parent_id ) VALUES ( '可口可乐', 1, '300ml', 1, '罐', 3, '2022-03-23 10:56:32', 2, 2, 7 );
2022-03-23 10:56:32.109 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 10:56:32 | 耗时 6 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( '可口可乐', '300ml', '罐', 1, 1, 'OUT-1648004192010', 3, '2022-03-23 10:56:32' );
2022-03-23 10:56:32.144 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:32.151 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:56:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 10:56:32.153 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:56:32 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:56:45.724 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:45.732 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:56:45 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_out so LEFT JOIN student_info si ON (si.id = so.user_id) WHERE 1 = 1;
2022-03-23 10:56:45.734 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 10:56:45 | 耗时 0 ms | SQL 语句：
SELECT so.id, so.num, so.user_id AS userId, so.price, so.custodian, so.handler, so.create_date AS createDate, so.apply_id AS applyId, si.`name` AS userName, si.team FROM stock_out so LEFT JOIN student_info si ON ( si.id = so.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 10:56:47.507 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:47.510 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 10:56:47 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'OUT-1648004192010';
2022-03-23 10:56:49.611 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:49.614 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 10:56:49 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'OUT-1648004192010';
2022-03-23 10:56:59.134 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 10:56:59.158 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:56:59 | 耗时 5 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T10:56:59.142+0800' WHERE username = 'lisi';
2022-03-23 10:56:59.160 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:56:59 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 10:56:59.183 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:56:59 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-03-23T10:56:59.175+0800', '', '127.0.0.1' );
2022-03-23 10:56:59.204 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:56:59 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 10:56:59.245 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:59.255 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:56:59 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-03-23 10:56:59.403 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:56:59.411 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:56:59 | 耗时 5 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 10:56:59.414 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:56:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:56:59.415 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:56:59 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:56:59.418 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:56:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 10:56:59.420 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:56:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 10:57:01.038 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:57:01.039 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:57:01.045 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 10:57:01 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 10:57:01.051 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:57:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-03-23 10:57:01.053 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:57:01 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableName FROM stock_info si LEFT JOIN student_info stu ON ( stu.id = si.to_user_id ) LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15 LIMIT 0,10;
2022-03-23 10:57:10.852 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:57:10.857 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 10:57:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15 AND si.type_id = 2;
2022-03-23 10:57:12.345 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:57:12.351 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:57:12 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-03-23 10:57:12.352 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:57:12 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableName FROM stock_info si LEFT JOIN student_info stu ON ( stu.id = si.to_user_id ) LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15 LIMIT 0,10;
2022-03-23 10:57:14.558 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:57:14.563 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:57:14 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 10:57:14.564 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:57:14 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:57:14.567 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:57:14 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:57:14.569 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:57:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 10:57:14.571 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:57:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 10:59:23.575 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:59:23.585 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:59:23 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-03-23 10:59:23.587 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 10:59:23 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-03-23 10:59:24.610 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:59:24.611 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:59:24.618 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 10:59:24 | 耗时 3 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 10:59:24.618 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:59:24 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-03-23 10:59:24.620 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 10:59:24 | 耗时 1 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableName FROM stock_info si LEFT JOIN student_info stu ON ( stu.id = si.to_user_id ) LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15 LIMIT 0,10;
2022-03-23 10:59:26.050 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 10:59:26.062 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:59:26 | 耗时 9 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 10:59:26.063 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:59:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:59:26.064 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:59:26 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 10:59:26.066 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:59:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 10:59:26.068 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 10:59:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:04:35.698 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:04:35.715 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:04:35 | 耗时 14 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:04:35.717 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:04:35 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:04:35.718 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:04:35 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:04:35.720 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:04:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:04:35.722 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:04:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:05:01.953 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:05:01.955 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 11:05:01 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:05:01.957 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 11:05:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:05:01.959 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 11:05:01 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:05:01.959 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 11:05:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:05:01.962 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 11:05:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:05:32.141 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:05:32.156 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 11:05:32 | 耗时 12 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:05:32.157 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 11:05:32 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:05:32.158 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 11:05:32 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:05:32.160 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 11:05:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:05:32.161 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 11:05:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:08:24.012 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:08:24.060 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 11:08:24 | 耗时 43 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:08:24.061 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 11:08:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:08:24.063 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 11:08:24 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:08:24.065 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 11:08:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:08:24.066 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 11:08:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:09:54.014 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:09:54.028 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:09:54 | 耗时 11 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:09:54.030 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:09:54 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:09:54.031 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:09:54 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:09:54.033 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:09:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:09:54.036 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:09:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:25:09.233 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:25:09.241 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 11:25:09 | 耗时 5 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:25:09.242 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 11:25:09 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:25:09.244 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 11:25:09 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:25:09.245 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 11:25:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:25:09.247 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 11:25:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:25:46.671 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:25:46.674 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:25:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:25:46.676 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:25:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:25:46.677 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:25:46 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:25:46.678 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:25:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:25:46.679 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:25:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:27:45.945 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:27:45.976 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 11:27:45 | 耗时 29 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:27:45.979 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 11:27:45 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:27:45.980 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 11:27:45 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:27:45.982 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 11:27:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:27:45.983 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 11:27:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:28:19.323 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:28:19.327 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:28:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:28:19.329 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:28:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:28:19.330 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:28:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:28:19.331 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:28:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:28:19.333 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 11:28:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:30:07.457 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:30:07.496 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 11:30:07 | 耗时 35 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:30:07.498 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 11:30:07 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:30:07.499 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 11:30:07 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:30:07.500 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 11:30:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:30:07.502 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 11:30:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:30:35.477 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:30:35.481 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:30:35 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:30:35.482 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:30:35 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:30:35.484 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:30:35 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:30:35.485 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:30:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:30:35.487 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:30:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:31:08.329 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:31:08.333 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 11:31:08 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:31:08.334 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 11:31:08 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:31:08.336 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 11:31:08 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:31:08.337 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 11:31:08 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:31:08.339 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 11:31:08 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:32:06.927 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:32:06.958 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 11:32:06 | 耗时 27 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:32:06.960 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 11:32:06 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:32:06.962 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 11:32:06 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:32:06.964 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 11:32:06 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:32:06.966 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 11:32:06 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:36:07.472 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:36:07.488 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 11:36:07 | 耗时 13 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:36:07.489 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 11:36:07 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:36:07.490 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 11:36:07 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:36:07.492 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 11:36:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:36:07.493 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 11:36:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:37:24.430 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:37:24.466 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:37:24 | 耗时 34 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:37:24.467 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:37:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:37:24.469 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:37:24 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:37:24.470 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:37:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:37:24.472 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 11:37:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:41:21.154 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:41:21.173 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 11:41:21 | 耗时 16 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:41:21.174 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 11:41:21 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:41:21.176 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 11:41:21 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:41:21.177 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 11:41:21 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:41:21.178 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 11:41:21 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:42:31.615 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 11:42:31.627 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 11:42:31 | 耗时 9 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 11:42:31.628 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 11:42:31 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:42:31.630 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 11:42:31 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 11:42:31.631 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 11:42:31 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 11:42:31.633 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 11:42:31 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 11:55:52.149 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 12:16:44.294 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 12:16:44.310 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:16:44 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T12:16:44.298+0800' WHERE username = 'caigou';
2022-03-23 12:16:44.315 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:16:44 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 12:16:44.337 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:16:44 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'caigou', '2022-03-23T12:16:44.327+0800', '', '127.0.0.1' );
2022-03-23 12:16:44.358 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:16:44 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 12:16:44.369 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:16:44.374 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 12:16:44 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou') order by m.order_num;
2022-03-23 12:16:44.687 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:16:44.821 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:16:44 | 耗时 131 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 12:16:44.822 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:16:44 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 12:16:44.825 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:16:44 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 12:16:44.827 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:16:44 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 12:16:44.828 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:16:44 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'caigou' group by days;
2022-03-23 12:16:47.760 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:16:47.760 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:16:47.764 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 12:16:47 | 耗时 1 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 12:16:47.771 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 12:16:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-03-23 12:16:47.773 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 12:16:47 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-03-23 12:16:50.824 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:16:50.877 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:16:50 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2022-03-23 12:16:50.878 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:16:50 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2022-03-23 12:16:52.153 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:16:52.192 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 12:16:52 | 耗时 20 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2022-03-23 12:16:52.193 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 12:16:52 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2022-03-23 12:16:54.465 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:16:54.469 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:16:54 | 耗时 1 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'RUR-1647868056401';
2022-03-23 12:17:02.744 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:17:02.744 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:17:02.746 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 12:17:02 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 12:17:02.747 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 12:17:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-03-23 12:17:02.749 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 12:17:02 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-03-23 12:17:03.850 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:17:03.852 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 12:17:03 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 12:19:17.206 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:19:17.223 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 12 ms | SQL 语句：
INSERT INTO stock_put ( num, price, custodian, put_user, content, create_date ) VALUES ( 'PUT-1648009157208', 43197, '樊可', '樊可', '电脑配件', '2022-03-23 12:19:17' );
2022-03-23 12:19:17.237 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 1 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE name = '华硕3080ti' AND type_id = 7 AND is_in = 0;
2022-03-23 12:19:17.249 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 9 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in ) VALUES ( '华硕3080ti', 7, 'GeForce RTX 3080Ti', 3, '块', 8999, '2022-03-23 12:19:17', 0 );
2022-03-23 12:19:17.256 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 5 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in, parent_id ) VALUES ( '华硕3080ti', 7, 'GeForce RTX 3080Ti', 3, '块', 8999, '2022-03-23 12:19:17', 1, 20 );
2022-03-23 12:19:17.266 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 9 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( '华硕3080ti', 'GeForce RTX 3080Ti', '块', 3, 7, 'PUT-1648009157208', 8999, '2022-03-23 12:19:17' );
2022-03-23 12:19:17.268 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE name = 'i9 9900k' AND type_id = 7 AND is_in = 0;
2022-03-23 12:19:17.280 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 9 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in ) VALUES ( 'i9 9900k', 7, '英特尔® 酷睿™ i9-9900K 处理器 ', 3, '颗', 5400, '2022-03-23 12:19:17', 0 );
2022-03-23 12:19:17.289 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 7 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in, parent_id ) VALUES ( 'i9 9900k', 7, '英特尔® 酷睿™ i9-9900K 处理器 ', 3, '颗', 5400, '2022-03-23 12:19:17', 1, 22 );
2022-03-23 12:19:17.300 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 9 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( 'i9 9900k', '英特尔® 酷睿™ i9-9900K 处理器 ', '颗', 3, 7, 'PUT-1648009157208', 5400, '2022-03-23 12:19:17' );
2022-03-23 12:19:17.337 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:19:17.342 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-03-23 12:19:17.343 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 12:19:17 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-03-23 12:26:17.346 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:26:17.359 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 12:26:17 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-03-23 12:26:17.360 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 12:26:17 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-03-23 12:26:22.485 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:26:22.505 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:26:22 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 12:26:22.507 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:26:22 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 12:26:22.509 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:26:22 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 12:26:22.511 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:26:22 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 12:26:22.514 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 12:26:22 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'caigou' group by days;
2022-03-23 12:26:58.003 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:26:58.087 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 12:26:58 | 耗时 81 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 12:26:58.089 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 12:26:58 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 12:26:58.090 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 12:26:58 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 12:26:58.092 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 12:26:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 12:26:58.094 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 12:26:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'caigou' group by days;
2022-03-23 12:27:25.032 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:27:25.035 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:27:25 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 12:27:25.037 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:27:25 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 12:27:25.038 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:27:25 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 12:27:25.040 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:27:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 12:27:25.042 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 12:27:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'caigou' group by days;
2022-03-23 12:30:09.655 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 12:30:09.674 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 12:30:09 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 12:30:09.676 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 12:30:09 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 12:30:09.677 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 12:30:09 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 12:30:09.679 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 12:30:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 12:30:09.681 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 12:30:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'caigou' group by days;
2022-03-23 12:55:52.148 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 13:55:52.147 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 14:52:53.431 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648004150186 paused.
2022-03-23 14:52:53.433 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 14:52:53.448 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 14:52:53.450 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 14:52:53.450 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648004150186 shutting down.
2022-03-23 14:52:53.450 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648004150186 paused.
2022-03-23 14:52:53.451 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648004150186 shutdown complete.
2022-03-23 14:52:53.454 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 14:52:53.455 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 14:52:53.458 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 14:52:59.825 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 14924 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 14:52:59.863 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 14:53:00.735 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 14:53:00.738 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 14:53:00.796 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
2022-03-23 14:53:01.079 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$a68b817b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.193 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$80dacd1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.275 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$174c5c4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$82cc5df7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.667 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$7b91154b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.684 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.688 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.769 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.775 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$68d3b85d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.778 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.784 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$5514c8e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.792 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.793 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:01.795 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 14:53:01.802 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 14:53:01.999 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 14:53:01.999 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 14:53:01.999 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 14:53:01.999 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 14:53:01.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.009 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.570 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.579 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.581 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.599 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.606 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.609 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.650 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.670 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.694 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.696 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.698 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.720 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.721 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.744 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.745 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.748 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.772 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.773 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.774 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.788 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.808 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$72dfdbdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.812 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$252c9df8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.815 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$e04383e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.821 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.824 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.830 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$70efb15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.835 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.838 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$54eb796e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.850 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.851 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.855 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.857 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.875 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.887 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.891 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.891 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:02.910 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:53:03.226 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 14:53:03.237 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 14:53:03.242 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 14:53:03.242 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 14:53:03.247 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 14:53:03.367 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 14:53:03.367 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3458 ms
2022-03-23 14:53:03.925 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 14:53:03.925 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 14:53:03.925 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 14:53:03.925 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 14:53:03.925 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 14:53:03.926 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 14:53:03.926 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 14:53:03.926 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 14:53:04.233 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 14:53:04.233 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 14:53:04.237 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 14:53:04.240 febs [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2022-03-23 14:53:04.252 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-03-23 14:58:02.520 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 15172 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 14:58:02.523 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 14:58:03.421 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 14:58:03.423 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 14:58:03.479 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35ms. Found 0 repository interfaces.
2022-03-23 14:58:03.766 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$b017f1bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:03.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:03.958 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8a673d60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:03.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:03.968 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:03.977 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$20d8cc8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:03.992 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$8c58ce38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.363 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$851d858c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.381 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.385 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.466 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.472 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$7260289e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.475 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.481 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$5ea13929] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.493 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 14:58:04.500 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 14:58:04.672 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 14:58:04.672 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 14:58:04.672 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 14:58:04.672 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 14:58:04.672 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.683 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:04.832 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.422 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.425 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.427 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.447 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.453 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.454 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.507 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.530 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.532 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.553 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.554 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.577 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.577 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.580 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.602 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.616 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.634 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$7c6c4c20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.637 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$2eb90e39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.639 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$e9cff428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.646 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.648 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.652 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$109b6b56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.657 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.659 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$5e77e9af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.669 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.671 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.674 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.676 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.693 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.704 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.708 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.709 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.715 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:05.726 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 14:58:06.023 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 14:58:06.033 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 14:58:06.038 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 14:58:06.038 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 14:58:06.043 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 14:58:06.163 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 14:58:06.163 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3571 ms
2022-03-23 14:58:06.720 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 14:58:06.720 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 14:58:06.720 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 14:58:06.720 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 14:58:06.720 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 14:58:06.721 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 14:58:06.721 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 14:58:06.721 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 14:58:07.144 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 14:58:07.155 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 14:58:07.155 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 14:58:07.159 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 14:58:07.160 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 14:58:07.161 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1648018687145'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 14:58:07.161 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 14:58:07.161 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 14:58:07.162 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5ddf5118
2022-03-23 14:58:07.211 febs [main] INFO  p6spy - 2022-03-23 14:58:07 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 14:58:07.811 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 14:58:08.962 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 14:58:09.015 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 14:58:09.091 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 14:58:09.104 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 14:58:09.114 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 14:58:09.116 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 14:58:09.130 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 14:58:09.132 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.114 seconds (JVM running for 7.986)
2022-03-23 14:58:09.141 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 14:58:09.142 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 14:58:09.142 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 14:58:09.173 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 14:58:09.181 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 14:58:09.241 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 14:58:09.258 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 14:58:09.272 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 14:58:09.277 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 14:58:09.279 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 14:58:09.281 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 14:58:09.284 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 14:58:09.286 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 14:58:09.288 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 14:58:09.291 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 14:58:09.294 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 14:58:09.297 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 14:58:09.300 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 14:58:09.302 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 14:58:09.304 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 14:58:09.307 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 14:58:09.309 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 14:58:09.311 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 14:58:09.313 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 14:58:09.315 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 14:58:09.317 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 14:58:09.319 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 14:58:09.321 febs [main] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 14:58:09.321 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 14:58:09.322 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 14:58:09.322 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 14:58:09.322 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 14:58:09.322 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T14:58:09.322
2022-03-23 14:58:09.730 febs [RMI TCP Connection(2)-192.168.42.78] INFO  p6spy - 2022-03-23 14:58:09 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 14:58:09.730 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 14:58:09.730 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 14:58:09.743 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-03-23 14:58:10.093 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 14:58:10.106 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 14:58:10.106 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1648004150186"'s failed in-progress jobs.
2022-03-23 14:58:10.117 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648018687145 started.
2022-03-23 15:02:59.914 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 15:03:00.035 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 15:03:00 | 耗时 12 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T15:02:59.998+0800' WHERE username = 'admin';
2022-03-23 15:03:00.055 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 15:03:00 | 耗时 18 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 15:03:00.094 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 15:03:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-23T15:03:00.066+0800', '', '127.0.0.1' );
2022-03-23 15:03:00.200 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:03:00.234 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:03:00 | 耗时 12 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-23 15:03:00.532 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:03:00.532 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:03:00.548 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:03:00 | 耗时 10 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:03:00.550 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:03:00 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:03:00.552 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:03:00 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:03:00.555 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:03:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:03:00.557 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:03:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:03:00.582 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 15:03:00 | 耗时 38 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:04:16.130 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:04:16.143 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:04:16.150 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:04:16.152 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:04:16.153 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:04:16.155 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:04:16.157 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:04:16.398 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:04:16.402 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 2 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:04:16.406 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:04:16.406 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:04:16.409 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 2 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:04:16.412 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:04:16.414 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:04:16.416 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:04:16.417 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 7 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:04:16.421 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:04:16.424 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:04:16.426 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:04:16.429 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:04:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:04:45.269 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:04:45.271 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:04:45.272 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:04:45.274 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:04:45.276 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:04:45.278 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:04:45.279 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:04:45.281 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:04:45.538 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 264 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:04:45.539 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:04:45.541 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:04:45.543 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:04:45.545 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:04:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:05:17.846 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:05:17.847 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:05:17.866 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 18 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:05:17.876 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 13 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:05:17.877 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:05:17.877 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:05:17.879 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:05:17.880 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:05:17.880 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:05:17.882 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:05:17.882 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:05:17.884 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:05:17.886 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:05:17 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:43:33.126 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:43:33.126 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:43:33.135 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 5 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:43:33.139 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:43:33.142 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:43:33.144 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:43:33.146 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 16 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:43:33.146 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:43:33.147 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:43:33.147 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:43:33.149 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:43:33.150 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:43:33.152 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:43:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:43:54.107 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:43:54.109 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:43:54.110 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:43:54.112 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:43:54.114 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:43:54.116 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:43:54.117 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:43:54.119 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:43:54.135 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 24 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:43:54.137 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:43:54.140 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:43:54.141 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:43:54.143 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:43:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:45:33.283 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:45:33.286 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:45:33.289 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 3 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:45:33.292 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:45:33.295 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:45:33.297 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:45:33.299 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:45:33.301 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:45:33.317 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 28 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:45:33.319 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:45:33.320 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:45:33.322 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:45:33.324 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:45:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:47:09.698 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:47:09.700 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:47:09.722 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 21 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:47:09.727 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:47:09.732 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 2 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:47:09.734 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:47:09.736 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:47:09.740 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:47:09.770 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 68 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:47:09.772 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:47:09.773 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:47:09.775 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:47:09.779 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:47:09 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:47:29.733 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:47:29.733 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:47:29.735 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:47:29.736 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:47:29.737 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:47:29.738 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:47:29.738 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:47:29.739 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:47:29.740 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:47:29.740 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:47:29.742 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:47:29.742 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:47:29.745 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:47:29 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:50:38.465 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:50:38.466 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:50:38.491 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 23 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:50:38.496 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 27 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:50:38.497 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:50:38.499 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:50:38.500 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:50:38.502 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:50:38.516 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 23 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:50:38.523 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 5 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:50:38.525 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:50:38.526 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:50:38.528 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:50:38 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:51:54.361 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:51:54.361 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:51:54.363 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:51:54.365 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:51:54.365 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:51:54.366 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:51:54.366 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:51:54.368 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:51:54.368 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:51:54.369 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:51:54.369 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:51:54.371 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:51:54.371 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 15:51:54 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:53:33.471 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:53:33.473 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:53:33.476 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 2 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:53:33.480 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:53:33.482 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:53:33.484 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:53:33.485 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 9 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:53:33.485 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:53:33.486 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:53:33.486 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:53:33.488 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:53:33.490 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:53:33.491 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 15:53:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:54:43.483 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:54:43.485 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:54:43.511 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 26 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:54:43.513 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 25 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:54:43.514 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:54:43.514 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:54:43.515 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:54:43.517 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:54:43.517 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:54:43.518 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:54:43.518 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:54:43.520 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:54:43.521 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 15:54:43 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:56:19.785 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:56:19.786 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:56:19.792 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 4 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:56:19.796 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:56:19.798 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:56:19.798 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 9 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:56:19.799 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:56:19.799 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:56:19.801 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:56:19.801 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:56:19.802 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:56:19.802 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:56:19.804 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:56:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:58:09.113 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 15:58:39.173 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:58:39.174 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:58:39.190 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 14 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:58:39.193 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:58:39.196 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:58:39.198 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:58:39.199 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:58:39.201 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:58:39.204 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 26 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:58:39.205 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:58:39.207 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:58:39.208 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:58:39.210 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 15:58:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 15:58:52.254 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:58:52.255 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 15:58:52.256 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 15:58:52.258 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 15:58:52.260 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 15:58:52.261 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 15:58:52.262 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 15:58:52.263 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 15:58:52.263 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:58:52.264 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 15:58:52.264 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 15:58:52.265 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 15:58:52.267 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 15:58:52 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:00:21.139 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:00:21.145 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:00:21.149 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 7 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:00:21.153 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:00:21.156 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:00:21.157 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:00:21.159 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:00:21.160 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:00:21.164 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:00:21.166 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:00:21.167 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:00:21.169 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:00:21.170 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:00:21 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:02:17.035 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:02:17.043 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 5 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:02:17.048 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:02:17.051 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:02:17.053 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:02:17.054 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:02:17.056 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:02:17.058 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:02:17.081 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:02:17.082 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:02:17.084 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:02:17.086 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:02:17.088 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:02:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:05:35.782 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 16:05:35.795 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:05:35 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T16:05:35.784+0800' WHERE username = 'admin';
2022-03-23 16:05:35.800 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:05:35 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:05:35.815 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:05:35 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-23T16:05:35.810+0800', '', '127.0.0.1' );
2022-03-23 16:05:35.912 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:05:35.918 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:05:35 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-23 16:05:36.187 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:05:36.188 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:05:36.195 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:05:36.196 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:05:36.198 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 8 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:05:36.198 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:05:36.200 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:05:36.201 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:05:36.201 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:05:36.203 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:05:36.205 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:05:36.207 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:05:36.210 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:05:36 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:06:59.639 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:06:59.639 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:06:59.641 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:06:59.642 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:06:59.643 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:06:59.644 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:06:59.645 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:06:59.645 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:06:59.647 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:06:59.647 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:06:59.648 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:06:59.648 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:06:59.650 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:06:59 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:07:19.153 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:07:19.154 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:07:19.156 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:07:19.160 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:07:19.163 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:07:19.165 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:07:19.167 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:07:19.168 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:07:19.170 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 13 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:07:19.171 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:07:19.173 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:07:19.175 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:07:19.176 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:07:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:08:54.863 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:08:54.943 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:08:54 | 耗时 17 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2022-03-23 16:08:54.947 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:08:54 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:09:27.145 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:09:27.145 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:09:27.154 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 7 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:09:27.158 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 10 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:09:27.158 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:09:27.159 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:09:27.160 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:09:27.161 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:09:27.162 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:09:27.162 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:09:27.163 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:09:27.164 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:09:27.165 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:27 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:09:43.128 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 16:09:43.145 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T16:09:43.131+0800' WHERE username = 'lisi';
2022-03-23 16:09:43.149 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:09:43.164 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-03-23T16:09:43.160+0800', '', '127.0.0.1' );
2022-03-23 16:09:43.179 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 16:09:43.190 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:09:43.193 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-03-23 16:09:43.421 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:09:43.424 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:09:43.424 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:09:43.427 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:09:43.429 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:09:43.431 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:09:43.434 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:09:43.436 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:09:43.436 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:09:43.439 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:09:43.441 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:09:43.443 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:09:43.444 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:09:43.446 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:09:43 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:13:41.112 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:13:41.112 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:13:41.120 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 6 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:13:41.123 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:13:41.127 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:13:41.129 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 15 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:13:41.129 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:13:41.130 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:13:41.131 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:13:41.131 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:13:41.132 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:13:41.133 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:13:41.134 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:13:41.134 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:13:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:13:47.530 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:13:47.531 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:13:47.532 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:13:47.535 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:13:47.537 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:13:47.540 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:13:47.542 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 7 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:13:47.542 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:13:47.543 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:13:47.544 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:13:47.545 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:13:47.545 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:13:47.546 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:13:47.549 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:13:47 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:14:48.747 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:14:48.751 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:14:48.752 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:14:48.754 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:14:48.758 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:14:48.761 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:14:48.763 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:14:48.765 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:14:48.766 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:14:48.772 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:14:48.773 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:14:48.775 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:14:48.777 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:14:48.779 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:14:48 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:15:22.132 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:15:22.135 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:15:22.138 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:15:22.140 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:15:22.144 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:15:22.146 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:15:22.147 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:15:22.149 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:15:22.157 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:15:22.171 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 11 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:15:22.173 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:15:22.175 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:15:22.178 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:15:22.180 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:15:22 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:16:01.026 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:16:01.028 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:16:01.030 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:16:01.033 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:16:01.035 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:16:01.037 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:16:01.039 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:16:01.040 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:16:01.042 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:16:01.070 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 39 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:16:01.071 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:16:01.073 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:16:01.075 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:16:01.076 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:16:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:17:16.201 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:17:16.201 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:17:16.216 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 12 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:17:16.219 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:17:16.222 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:17:16.225 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:17:16.227 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:17:16.229 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:17:16.230 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:17:16.238 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 35 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:17:16.240 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:17:16.241 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:17:16.243 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:17:16.246 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:17:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:18:43.375 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:18:43.378 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:18:43.381 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 3 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:18:43.385 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:18:43.388 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:18:43.391 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:18:43.393 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:18:43.395 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:18:43.400 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:18:43.404 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 22 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:18:43.405 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:18:43.407 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:18:43.409 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:18:43.411 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:18:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:19:25.170 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:19:25.172 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:19:25.173 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:19:25.175 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:19:25.175 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:19:25.177 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:19:25.177 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:19:25.178 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:19:25.178 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:19:25.180 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:19:25.180 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:19:25.182 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:19:25.182 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:19:25.184 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:19:25 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:20:49.874 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:20:49.882 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:20:49.892 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 16 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:20:49.895 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:20:49.899 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:20:49.902 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:20:49.902 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:20:49.904 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:20:49.904 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:20:49.905 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:20:49.907 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:20:49.907 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:20:49.909 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:20:49.909 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:20:49 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:21:53.820 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:21:53.820 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:21:53.822 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:21:53.824 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:21:53.825 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:21:53.825 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:21:53.826 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:21:53.827 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:21:53.828 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:21:53.828 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:21:53.830 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:21:53.830 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:21:53.832 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:21:53.833 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:21:53 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:22:13.849 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:22:13.853 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:22:13.856 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:22:13.859 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:22:13.861 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:22:13.862 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:22:13.864 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:22:13.866 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:22:13.867 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:22:13.878 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 15 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:22:13.880 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:22:13.881 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:22:13.883 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:22:13.884 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:22:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:22:38.560 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:22:38.560 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:22:38.562 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:22:38.563 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:22:38.564 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:22:38.566 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:22:38.566 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:22:38.568 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:22:38.568 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:22:38.569 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:22:38.569 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:22:38.571 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:22:38.573 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:22:38.574 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:22:38 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:23:42.937 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:23:42.937 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:23:42.944 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 4 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:23:42.947 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:23:42.949 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:23:42.951 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:23:42.952 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:23:42.954 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:23:42.956 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:23:42.956 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:23:42.957 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:23:42.959 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:23:42.961 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:23:42.963 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:23:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:24:20.731 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:24:20.734 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:24:20.734 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:24:20.737 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:24:20.738 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:24:20.739 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:24:20.739 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:24:20.740 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:24:20.740 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:24:20.742 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:24:20.742 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:24:20.744 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:24:20.744 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:24:20.745 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:24:20 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:25:40.086 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:25:40.086 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:25:40.088 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:25:40.089 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:25:40.091 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:25:40.091 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:25:40.093 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:25:40.094 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:25:40.095 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:25:40.096 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:25:40.096 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:25:40.098 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:25:40.100 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:25:40.101 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:25:40 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:26:35.676 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:26:35.676 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:26:35.680 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:26:35.683 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:26:35.686 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:26:35.688 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:26:35.690 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:26:35.692 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:26:35.693 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:26:35.693 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 15 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:26:35.695 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:26:35.697 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:26:35.699 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:26:35.700 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:26:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:27:24.458 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:27:24.458 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:27:24.462 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:27:24.464 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:27:24.465 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:27:24.465 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:27:24.467 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:27:24.467 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:27:24.468 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:27:24.468 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:27:24.470 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:27:24.470 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:27:24.472 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:27:24.474 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:27:24 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:27:55.992 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:27:55.992 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:27:55.995 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:27:55 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:27:55.998 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:27:55 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:27:56.000 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:27:56 | 耗时 6 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:27:56.001 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:27:56 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:27:56.002 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:27:56 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:27:56.003 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:27:56 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:27:56.003 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:27:56 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:27:56.004 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:27:56 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:27:56.004 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:27:56 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:27:56.006 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:27:56 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:27:56.006 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:27:56 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:27:56.008 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:27:56 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:28:25.227 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:28:25.227 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:28:25.229 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:28:25.232 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:28:25.234 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:28:25.235 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:28:25.237 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:28:25.239 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:28:25.241 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:28:25.244 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 15 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:28:25.246 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:28:25.248 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:28:25.250 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:28:25.252 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:28:25.445 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:28:25.446 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:28:25.448 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:28:25.449 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:28:25.450 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:28:25.451 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:28:25.452 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:28:25.452 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:28:25.453 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:28:25.454 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:28:25.455 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:28:25.455 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:28:25.457 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:28:25.458 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:25 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:28:34.053 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:28:34.054 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:28:34.056 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:28:34.058 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:28:34.060 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:28:34.062 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:28:34.064 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:28:34.067 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:28:34.069 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:28:34.074 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:28:34.075 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:28:34.077 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:28:34.078 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:28:34.080 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:28:34 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:28:51.475 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:28:51.531 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:28:51 | 耗时 41 ms | SQL 语句：
UPDATE student_info SET name='李四', team='实验一组' WHERE ID=2;
2022-03-23 16:28:56.777 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:28:56.779 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:28:56.782 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:28:56.785 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:28:56.787 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:28:56.788 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:28:56.789 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:28:56.790 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:28:56.792 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:28:56.826 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 34 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:28:56.827 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:28:56.829 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:28:56.830 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:28:56.834 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:28:56 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:29:06.495 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 16:29:06.579 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 80 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T16:29:06.496+0800' WHERE username = 'admin';
2022-03-23 16:29:06.583 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:29:06.597 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-23T16:29:06.593+0800', '', '127.0.0.1' );
2022-03-23 16:29:06.645 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:29:06.650 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-23 16:29:06.878 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:29:06.879 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:29:06.880 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:29:06.882 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:29:06.884 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:29:06.885 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:29:06.887 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:29:06.889 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:29:06.894 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 12 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:29:06.895 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:29:06.896 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:29:06.898 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:29:06.900 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:29:06 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:29:24.582 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:29:24.603 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:29:24 | 耗时 16 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2022-03-23 16:29:24.604 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:29:24 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:29:27.630 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:29:27.637 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:29:27 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:31:41.590 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:31:41.590 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:31:41.595 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 3 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:31:41.599 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:31:41.601 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:31:41.604 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:31:41.606 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:31:41.607 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:31:41.610 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:31:41.612 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:31:41.613 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:31:41.615 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:31:41.616 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:31:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:31:45.473 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:31:45.498 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:31:45 | 耗时 22 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2022-03-23 16:31:45.499 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:31:45 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:31:46.475 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:31:46.478 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:31:46 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:31:55.825 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:31:55.839 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:31:55 | 耗时 5 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'RUR-1647868056401';
2022-03-23 16:32:05.253 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:05.279 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:32:05 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 16:32:05.281 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:32:05 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:32:13.191 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:13.194 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:32:13 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 16:32:16.929 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:16.932 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:32:16 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 16:32:19.174 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:19.177 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:32:19 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 16:32:29.456 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 16:32:29.486 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 26 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T16:32:29.458+0800' WHERE username = 'lisi';
2022-03-23 16:32:29.490 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:32:29.508 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-03-23T16:32:29.502+0800', '', '127.0.0.1' );
2022-03-23 16:32:29.523 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 16:32:29.535 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:29.539 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-03-23 16:32:29.669 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:29.669 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:29.671 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:32:29.674 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:32:29.676 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:32:29.678 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:32:29.680 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:32:29.682 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:32:29.683 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:32:29.692 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 19 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:32:29.694 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:32:29.695 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:32:29.697 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:32:29.699 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:32:29 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:32:32.948 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:32.956 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:32:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-03-23 16:32:32.958 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:32:32 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-03-23 16:32:36.206 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:36.209 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:32:36 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 16:32:39.551 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:39.554 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:32:39 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 16:32:49.590 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:32:49.593 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:32:49 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 16:33:00.223 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:00.226 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:33:00 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:33:27.637 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:27.716 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:33:27 | 耗时 4 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:33:27.805 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:33:27 | 耗时 18 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( '卫生纸', '', '卷', 2, 2, 'REQ-1648024407638', 2, '2022-03-23 16:33:27' );
2022-03-23 16:33:27.822 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:33:27 | 耗时 9 ms | SQL 语句：
INSERT INTO goods_request ( num, user_id, content, step, create_date ) VALUES ( 'REQ-1648024407638', 2, '需要卫生纸', 0, '2022-03-23 16:33:27' );
2022-03-23 16:33:27.856 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:27.865 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:33:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-03-23 16:33:27.866 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:33:27 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-03-23 16:33:38.040 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 16:33:38.052 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T16:33:38.040+0800' WHERE username = 'admin';
2022-03-23 16:33:38.054 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:33:38.082 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-23T16:33:38.077+0800', '', '127.0.0.1' );
2022-03-23 16:33:38.104 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:38.108 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-23 16:33:38.342 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:38.343 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:38.346 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:33:38.347 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:33:38.348 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:33:38.350 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:33:38.351 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:33:38.354 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 10 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:33:38.356 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:33:38.360 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:33:38.362 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:33:38.363 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:33:38.365 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:33:38 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:33:40.817 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:40.835 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:33:40 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2022-03-23 16:33:40.836 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:33:40 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:33:41.678 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:41.682 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:33:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 16:33:41.683 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:33:41 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:33:44.971 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:44.973 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:33:44 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648024407638';
2022-03-23 16:33:50.234 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:50.237 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:33:50 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 16:33:53.156 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:33:53.159 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:33:53 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 16:34:01.054 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:01.080 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:34:01 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 16:34:07.875 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:07.919 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:34:07 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2022-03-23 16:34:07.920 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:34:07 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:34:11.863 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:11.865 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:34:11 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1647838570459';
2022-03-23 16:34:14.311 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:14.314 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:34:14 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1648009157208';
2022-03-23 16:34:19.254 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:19.257 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:34:19 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1647872344998';
2022-03-23 16:34:22.911 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:22.911 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:22.912 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:22.913 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:34:22 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:34:22.913 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:34:22 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info;
2022-03-23 16:34:22.922 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:34:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-03-23 16:34:22.923 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:34:22 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-03-23 16:34:22.924 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:22.926 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:34:22 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:34:52.717 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:52.734 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:34:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM stock_out so LEFT JOIN student_info si ON (si.id = so.user_id) WHERE 1 = 1;
2022-03-23 16:34:52.735 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:34:52 | 耗时 0 ms | SQL 语句：
SELECT so.id, so.num, so.user_id AS userId, so.price, so.custodian, so.handler, so.create_date AS createDate, so.apply_id AS applyId, si.`name` AS userName, si.team FROM stock_out so LEFT JOIN student_info si ON ( si.id = so.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:34:55.391 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:55.394 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:34:55 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'OUT-1647925932291';
2022-03-23 16:34:57.537 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:34:57.540 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:34:57 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'OUT-1648004192010';
2022-03-23 16:35:00.849 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:00.849 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:00.851 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:35:00 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:35:00.856 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:35:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0;
2022-03-23 16:35:00.857 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:35:00 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, si.is_in, si.to_user_id, cy.`name` AS consumableName FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0 LIMIT 0,10;
2022-03-23 16:35:06.416 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:06.419 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:35:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0;
2022-03-23 16:35:06.420 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:35:06 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, si.is_in, si.to_user_id, cy.`name` AS consumableName FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0 LIMIT 10,10;
2022-03-23 16:35:11.079 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:11.083 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:35:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0;
2022-03-23 16:35:11.084 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:35:11 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, si.is_in, si.to_user_id, cy.`name` AS consumableName FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0 LIMIT 0,10;
2022-03-23 16:35:14.637 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:14.646 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:35:14 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM student_info si LEFT JOIN t_user tu ON (tu.USER_ID = si.user_id) WHERE 1 = 1;
2022-03-23 16:35:14.647 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:35:14 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.team, si.user_id AS userId, si.content, si.create_date AS createDate, tu.USERNAME AS userName, tu.`STATUS` AS accountStatus, tu.LAST_LOGIN_TIME AS lastTime FROM student_info si LEFT JOIN t_user tu ON ( tu.USER_ID = si.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:35:16.857 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:16.881 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:35:16 | 耗时 12 ms | SQL 语句：
UPDATE t_user SET status=0 WHERE USER_ID = 12;
2022-03-23 16:35:16.901 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:16.906 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:35:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM student_info si LEFT JOIN t_user tu ON (tu.USER_ID = si.user_id) WHERE 1 = 1;
2022-03-23 16:35:16.907 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:35:16 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.team, si.user_id AS userId, si.content, si.create_date AS createDate, tu.USERNAME AS userName, tu.`STATUS` AS accountStatus, tu.LAST_LOGIN_TIME AS lastTime FROM student_info si LEFT JOIN t_user tu ON ( tu.USER_ID = si.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:35:19.353 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:19.371 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:35:19 | 耗时 15 ms | SQL 语句：
UPDATE t_user SET status=1 WHERE USER_ID = 12;
2022-03-23 16:35:19.390 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:19.393 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:35:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM student_info si LEFT JOIN t_user tu ON (tu.USER_ID = si.user_id) WHERE 1 = 1;
2022-03-23 16:35:19.395 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:35:19 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.team, si.user_id AS userId, si.content, si.create_date AS createDate, tu.USERNAME AS userName, tu.`STATUS` AS accountStatus, tu.LAST_LOGIN_TIME AS lastTime FROM student_info si LEFT JOIN t_user tu ON ( tu.USER_ID = si.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:35:21.757 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:21.761 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:35:21 | 耗时 2 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:35:21.763 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:21.803 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:35:21 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM combo_info;
2022-03-23 16:35:21.804 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:35:21 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info LIMIT 0,10;
2022-03-23 16:35:25.091 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:25.099 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:35:25 | 耗时 5 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'COMBO-16464646455';
2022-03-23 16:35:35.230 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:35.245 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:35:35 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info;
2022-03-23 16:35:35.246 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:35:35 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info LIMIT 0,10;
2022-03-23 16:35:39.754 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:35:39.763 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:35:39 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM consumable_type;
2022-03-23 16:35:39.763 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:35:39 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type LIMIT 0,10;
2022-03-23 16:39:57.793 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 16:39:57.803 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 6 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T16:39:57.795+0800' WHERE username = 'lisi';
2022-03-23 16:39:57.807 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:39:57.822 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-03-23T16:39:57.818+0800', '', '127.0.0.1' );
2022-03-23 16:39:57.834 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 16:39:57.844 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:39:57.846 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-03-23 16:39:57.980 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:39:57.981 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:39:57.983 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:39:57.987 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:39:57.987 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:39:57.988 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:39:57.989 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:39:57.990 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:39:57.991 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:39:57.992 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:39:57.992 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:39:57.994 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:39:57.995 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:39:57.997 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:39:57 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:40:01.298 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:40:01.307 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:40:01 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-03-23 16:40:01.308 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:40:01 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-03-23 16:40:02.743 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:40:02.745 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:40:02 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:41:59.981 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:41:59.984 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:41:59 | 耗时 1 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:42:33.730 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648018687145 paused.
2022-03-23 16:42:33.731 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 16:42:33.745 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 16:42:33.745 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 16:42:33.746 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648018687145 shutting down.
2022-03-23 16:42:33.746 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648018687145 paused.
2022-03-23 16:42:33.747 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648018687145 shutdown complete.
2022-03-23 16:42:33.751 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 16:42:33.752 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 16:42:33.757 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 16:42:39.830 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 14752 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 16:42:39.833 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 16:42:40.975 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 16:42:40.977 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 16:42:41.034 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46ms. Found 0 repository interfaces.
2022-03-23 16:42:41.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$e7d047a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:41.454 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:41.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c21f934b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:41.536 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:41.540 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:41.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5891227a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:41.566 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c4112423] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:41.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$bcd5db77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.010 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.034 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$aa187e89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$96598f14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.148 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.152 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 16:42:42.160 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 16:42:42.343 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 16:42:42.343 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 16:42:42.343 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 16:42:42.343 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 16:42:42.343 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.353 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:42.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.071 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.079 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.085 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.109 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.110 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.117 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.118 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.119 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.217 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.219 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.242 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.300 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.334 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b424a20b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.337 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$66716424] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$21884a13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.347 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.349 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.354 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$4853c141] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.359 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.363 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$96303f9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.374 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.376 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.380 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.409 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.422 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.428 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.436 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 16:42:43.738 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 16:42:43.748 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 16:42:43.753 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 16:42:43.753 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 16:42:43.758 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 16:42:43.881 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 16:42:43.881 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3980 ms
2022-03-23 16:42:44.435 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 16:42:44.436 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 16:42:44.436 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 16:42:44.436 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 16:42:44.436 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 16:42:44.436 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 16:42:44.436 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 16:42:44.436 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 16:42:44.893 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 16:42:44.905 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 16:42:44.905 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 16:42:44.908 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 16:42:44.910 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 16:42:44.910 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1648024964894'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 16:42:44.910 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 16:42:44.910 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 16:42:44.911 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2524d07a
2022-03-23 16:42:44.998 febs [main] INFO  p6spy - 2022-03-23 16:42:44 | 耗时 44 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 16:42:45.603 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 16:42:46.772 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 16:42:46.825 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 16:42:46.905 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 16:42:46.919 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 16:42:46.929 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 16:42:46.931 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 16:42:46.946 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 16:42:46.948 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.701 seconds (JVM running for 8.683)
2022-03-23 16:42:46.957 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 16:42:46.958 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 16:42:46.958 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 16:42:46.992 febs [main] INFO  p6spy - 2022-03-23 16:42:46 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 16:42:46.999 febs [main] INFO  p6spy - 2022-03-23 16:42:46 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:42:47.059 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 16:42:47.077 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 8 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 16:42:47.090 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 16:42:47.094 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:42:47.097 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 16:42:47.099 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 16:42:47.102 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 16:42:47.104 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:42:47.106 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 16:42:47.109 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 16:42:47.111 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 16:42:47.114 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:42:47.117 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 16:42:47.119 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 16:42:47.121 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 16:42:47.123 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:42:47.125 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 16:42:47.128 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 16:42:47.129 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 16:42:47.132 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:42:47.134 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 16:42:47.136 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 16:42:47.137 febs [main] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 16:42:47.138 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 16:42:47.138 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 16:42:47.138 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 16:42:47.138 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 16:42:47.138 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T16:42:47.138
2022-03-23 16:42:47.687 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 16:42:47.687 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 16:42:47.689 febs [RMI TCP Connection(1)-192.168.42.78] INFO  p6spy - 2022-03-23 16:42:47 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 16:42:47.699 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-03-23 16:42:47.922 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 16:42:47.945 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648024964894 started.
2022-03-23 16:43:02.953 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648024964894_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 16:43:02.954 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1648024964894_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1648018687145"'s failed in-progress jobs.
2022-03-23 16:43:24.696 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:43:24.723 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:43:24 | 耗时 1 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:43:38.471 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:43:38.471 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:43:38.475 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:43:38 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:43:38.486 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:43:38 | 耗时 8 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info;
2022-03-23 16:44:51.848 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:44:51.848 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:44:51.874 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:44:51 | 耗时 23 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:44:51.874 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:44:51 | 耗时 23 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info;
2022-03-23 16:45:08.982 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:45:08.982 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:45:08.985 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:45:08 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info;
2022-03-23 16:45:08.985 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:45:08 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:47:49.033 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:47:49.105 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:47:49 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-03-23 16:47:49.111 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:47:49 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-03-23 16:47:51.545 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:47:51.546 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:47:51.555 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:47:51 | 耗时 5 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info;
2022-03-23 16:47:51.555 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:47:51 | 耗时 7 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:47:53.290 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:47:53.299 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:47:53 | 耗时 2 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'COMBO-16464646455';
2022-03-23 16:48:54.450 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 16:48:54.488 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T16:48:54.458+0800' WHERE username = 'caigou';
2022-03-23 16:48:54.493 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:48:54.524 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'caigou', '2022-03-23T16:48:54.513+0800', '', '127.0.0.1' );
2022-03-23 16:48:54.549 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 16:48:54.595 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:48:54.609 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou') order by m.order_num;
2022-03-23 16:48:54.920 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:48:54.922 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:48:54.929 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:48:54.930 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:48:54.932 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:48:54.934 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 4 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:48:54.935 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:48:54.938 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'caigou' group by days;
2022-03-23 16:48:54.939 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:48:54.941 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:48:54.944 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:48:54.946 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:48:54.948 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:48:54 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:49:23.895 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:49:23.895 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:49:23.899 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:49:23 | 耗时 2 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:49:23.908 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:49:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-03-23 16:49:23.910 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:49:23 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-03-23 16:49:27.316 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:49:27.319 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:49:27 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:49:42.760 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:49:42.824 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:49:42 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2022-03-23 16:49:42.825 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:49:42 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:49:50.125 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:49:50.130 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:49:50 | 耗时 2 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1647838570459';
2022-03-23 16:49:52.406 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:49:52.409 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:49:52 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1648009157208';
2022-03-23 16:49:55.289 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:49:55.292 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:49:55 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1647872344998';
2022-03-23 16:50:00.500 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:00.549 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:50:00 | 耗时 34 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2022-03-23 16:50:00.550 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:50:00 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:50:04.528 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:04.530 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:50:04 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'RUR-1647868056401';
2022-03-23 16:50:19.001 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 16:50:19.010 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 6 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T16:50:19.002+0800' WHERE username = 'admin';
2022-03-23 16:50:19.013 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:50:19.040 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-23T16:50:19.036+0800', '', '127.0.0.1' );
2022-03-23 16:50:19.065 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:19.069 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-23 16:50:19.326 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:19.327 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:19.330 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:50:19.332 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:50:19.333 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 5 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:50:19.333 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:50:19.335 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:50:19.337 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:50:19.340 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-23 16:50:19.340 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:50:19.342 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:50:19.343 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:50:19.345 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:50:19 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:50:25.770 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:25.774 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:50:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2022-03-23 16:50:25.776 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:50:25 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:50:29.552 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:29.556 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:50:29 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'RUR-1647868056401';
2022-03-23 16:50:31.939 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:31.942 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:50:31 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:50:37.097 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:37.109 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:50:37 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-03-23 16:50:37.111 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:50:37 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:50:42.978 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:42.980 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:50:42 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648024407638';
2022-03-23 16:50:49.009 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:49.011 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:50:49 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 16:50:52.873 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:50:52.876 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:50:52 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-03-23 16:51:00.184 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:00.191 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:51:00 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2022-03-23 16:51:00.193 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:51:00 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:51:04.385 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:04.387 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:51:04 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1647838570459';
2022-03-23 16:51:07.519 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:07.538 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:51:07 | 耗时 16 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1647872344998';
2022-03-23 16:51:10.891 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:10.893 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:10.893 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:10.893 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:51:10 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:51:10.903 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:10.906 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:51:10 | 耗时 1 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:51:10.911 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:51:10 | 耗时 12 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info;
2022-03-23 16:51:10.911 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:51:10 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-03-23 16:51:10.913 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:51:10 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-03-23 16:51:34.202 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:34.234 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:51:34 | 耗时 19 ms | SQL 语句：
SELECT COUNT(1) FROM stock_out so LEFT JOIN student_info si ON (si.id = so.user_id) WHERE 1 = 1;
2022-03-23 16:51:34.235 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:51:34 | 耗时 0 ms | SQL 语句：
SELECT so.id, so.num, so.user_id AS userId, so.price, so.custodian, so.handler, so.create_date AS createDate, so.apply_id AS applyId, si.`name` AS userName, si.team FROM stock_out so LEFT JOIN student_info si ON ( si.id = so.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:51:39.365 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:39.367 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:51:39 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'OUT-1647925955976';
2022-03-23 16:51:41.366 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:41.369 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:51:41 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'OUT-1647925932291';
2022-03-23 16:51:47.558 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:47.558 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:47.560 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:51:47 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:51:47.563 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:51:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0;
2022-03-23 16:51:47.565 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:51:47 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, si.is_in, si.to_user_id, cy.`name` AS consumableName FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0 LIMIT 0,10;
2022-03-23 16:51:59.337 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:51:59.372 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:51:59 | 耗时 23 ms | SQL 语句：
SELECT COUNT(1) FROM student_info si LEFT JOIN t_user tu ON (tu.USER_ID = si.user_id) WHERE 1 = 1;
2022-03-23 16:51:59.373 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:51:59 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.team, si.user_id AS userId, si.content, si.create_date AS createDate, tu.USERNAME AS userName, tu.`STATUS` AS accountStatus, tu.LAST_LOGIN_TIME AS lastTime FROM student_info si LEFT JOIN t_user tu ON ( tu.USER_ID = si.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:52:04.135 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:04.157 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:52:04 | 耗时 12 ms | SQL 语句：
UPDATE t_user SET status=0 WHERE USER_ID = 12;
2022-03-23 16:52:04.179 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:04.182 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:52:04 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM student_info si LEFT JOIN t_user tu ON (tu.USER_ID = si.user_id) WHERE 1 = 1;
2022-03-23 16:52:04.183 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:52:04 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.team, si.user_id AS userId, si.content, si.create_date AS createDate, tu.USERNAME AS userName, tu.`STATUS` AS accountStatus, tu.LAST_LOGIN_TIME AS lastTime FROM student_info si LEFT JOIN t_user tu ON ( tu.USER_ID = si.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:52:07.918 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:07.967 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:52:07 | 耗时 46 ms | SQL 语句：
UPDATE t_user SET status=1 WHERE USER_ID = 12;
2022-03-23 16:52:07.990 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:07.994 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:52:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM student_info si LEFT JOIN t_user tu ON (tu.USER_ID = si.user_id) WHERE 1 = 1;
2022-03-23 16:52:07.996 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 16:52:07 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.team, si.user_id AS userId, si.content, si.create_date AS createDate, tu.USERNAME AS userName, tu.`STATUS` AS accountStatus, tu.LAST_LOGIN_TIME AS lastTime FROM student_info si LEFT JOIN t_user tu ON ( tu.USER_ID = si.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-03-23 16:52:11.074 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:11.076 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:11.077 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-23 16:52:11 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:52:11.128 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:52:11 | 耗时 39 ms | SQL 语句：
SELECT COUNT(1) FROM combo_info;
2022-03-23 16:52:11.129 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:52:11 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info LIMIT 0,10;
2022-03-23 16:52:15.294 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:15.297 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:52:15 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'COMBO-16464646455';
2022-03-23 16:52:24.428 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:24.482 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:52:24 | 耗时 45 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info;
2022-03-23 16:52:24.483 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:52:24 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info LIMIT 0,10;
2022-03-23 16:52:35.263 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:35.271 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:52:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM consumable_type;
2022-03-23 16:52:35.271 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:52:35 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type LIMIT 0,10;
2022-03-23 16:52:43.001 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-23 16:52:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-23 16:52:43.011 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:52:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-23 16:52:53.135 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 16:52:53.141 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T16:52:53.136+0800' WHERE username = 'lisi';
2022-03-23 16:52:53.145 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 16:52:53.161 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-03-23T16:52:53.156+0800', '', '127.0.0.1' );
2022-03-23 16:52:53.176 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 16:52:53.189 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:53.192 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-03-23 16:52:53.400 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:53.400 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:52:53.404 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 16:52:53.404 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 16:52:53.405 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:52:53.407 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 16:52:53.411 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 16:52:53.412 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 3 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-03-23 16:52:53.413 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-03-23 16:52:53.416 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 16:52:53.419 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 16:52:53.420 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 16:52:53.422 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 16:52:53.425 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:52:53 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 16:53:00.592 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:53:00.605 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:53:00 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-03-23 16:53:00.606 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:53:00 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-03-23 16:53:02.608 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:53:02.611 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:53:02 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:53:02.614 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:53:02.620 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:53:02 | 耗时 4 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info;
2022-03-23 16:53:05.953 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:53:05.965 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 16:53:05 | 耗时 10 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'COMBO-16464646455';
2022-03-23 16:53:13.673 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:53:13.675 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-23 16:53:13 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-03-23 16:53:16.395 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:53:16.398 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 16:53:16 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1648024407638';
2022-03-23 16:53:19.710 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:53:19.712 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 16:53:19.713 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 16:53:19 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-03-23 16:53:19.717 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:53:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-03-23 16:53:19.719 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 16:53:19 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableName FROM stock_info si LEFT JOIN student_info stu ON ( stu.id = si.to_user_id ) LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15 LIMIT 0,10;
2022-03-23 17:07:49.517 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648024964894 paused.
2022-03-23 17:07:49.518 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 17:07:49.529 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 17:07:49.529 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 17:07:49.532 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648024964894 shutting down.
2022-03-23 17:07:49.532 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648024964894 paused.
2022-03-23 17:07:49.536 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648024964894 shutdown complete.
2022-03-23 17:07:49.541 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 17:07:49.542 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 17:07:49.545 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-23 20:05:14.729 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 14376 (started by Administrator in E:\Project\实验室耗材管理系统\backend)
2022-03-23 20:05:14.732 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-23 20:05:16.608 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 20:05:16.610 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 20:05:16.711 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87ms. Found 0 repository interfaces.
2022-03-23 20:05:17.201 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$7bc38051] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:17.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:17.577 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5612cbf5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:17.592 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:17.597 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:17.618 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ec845b24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:17.642 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$58045ccd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$50c91421] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.474 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$3e0bb733] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.519 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.530 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$2a4cc7be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.541 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.546 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-23 20:05:18.556 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-23 20:05:18.797 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-23 20:05:18.798 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-23 20:05:18.798 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-23 20:05:18.798 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-23 20:05:18.798 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.811 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:18.820 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:19.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.007 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.123 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.136 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.154 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.357 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.361 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.410 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.478 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.507 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.601 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.602 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.603 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.626 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.678 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$4817dab5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.685 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$fa649cce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.689 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$b57b82bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.698 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.711 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.732 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$dc46f9eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$2a237844] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.788 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.790 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.843 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.848 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.933 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.939 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.949 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:20.973 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:05:21.505 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-23 20:05:21.527 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-23 20:05:21.534 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-23 20:05:21.534 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-23 20:05:21.550 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-23 20:05:22.057 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-23 20:05:22.057 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7091 ms
2022-03-23 20:05:22.931 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-23 20:05:22.932 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-23 20:05:22.932 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-23 20:05:22.933 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-23 20:05:22.933 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-23 20:05:22.936 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-23 20:05:22.937 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-23 20:05:22.938 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-23 20:05:23.609 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-23 20:05:23.634 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 20:05:23.634 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-23 20:05:23.642 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-23 20:05:23.644 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-23 20:05:23.645 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1648037123611'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 20:05:23.646 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-23 20:05:23.646 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-23 20:05:23.649 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6068cda1
2022-03-23 20:05:23.720 febs [main] INFO  p6spy - 2022-03-23 20:05:23 | 耗时 8 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-23 20:05:24.840 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-23 20:05:26.658 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-23 20:05:26.743 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 20:05:26.859 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-23 20:05:26.881 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-23 20:05:26.894 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-23 20:05:26.897 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 20:05:26.911 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-23 20:05:26.914 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 12.941 seconds (JVM running for 18.221)
2022-03-23 20:05:26.923 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-23 20:05:26.925 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-23 20:05:26.925 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-23 20:05:26.966 febs [main] INFO  p6spy - 2022-03-23 20:05:26 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-23 20:05:26.973 febs [main] INFO  p6spy - 2022-03-23 20:05:26 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 20:05:27.055 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-23 20:05:27.071 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-23 20:05:27.087 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-23 20:05:27.091 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 20:05:27.093 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-23 20:05:27.096 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-23 20:05:27.100 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-23 20:05:27.103 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 20:05:27.105 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-23 20:05:27.108 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-23 20:05:27.112 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-23 20:05:27.116 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 20:05:27.120 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-03-23 20:05:27.122 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-03-23 20:05:27.124 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-23 20:05:27.127 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 20:05:27.130 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 20:05:27.133 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 20:05:27.135 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-23 20:05:27.137 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 20:05:27.141 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-03-23 20:05:27.144 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-03-23 20:05:27.146 febs [main] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-23 20:05:27.147 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 20:05:27.147 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 20:05:27.147 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 20:05:27.147 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-23 20:05:27.147 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-23T20:05:27.147
2022-03-23 20:05:27.707 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 20:05:27.707 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-23 20:05:27.709 febs [RMI TCP Connection(1)-192.168.42.78] INFO  p6spy - 2022-03-23 20:05:27 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-23 20:05:27.723 febs [RMI TCP Connection(2)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2022-03-23 20:05:27.881 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 20:05:27.939 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-23 20:05:27.939 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1648024964894"'s failed in-progress jobs.
2022-03-23 20:05:28.010 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648037123611 started.
2022-03-23 20:07:36.670 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-23 20:07:36.785 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 20:07:36 | 耗时 5 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-23T20:07:36.755+0800' WHERE username = 'mrbird';
2022-03-23 20:07:36.790 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 20:07:36 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-23 20:07:36.814 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 20:07:36 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2022-03-23T20:07:36.805+0800', '', '127.0.0.1' );
2022-03-23 20:07:36.922 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 20:07:36.946 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 20:07:36 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2022-03-23 20:07:37.313 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 20:07:37.314 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 20:07:37.332 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 2 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-23 20:07:37.337 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-03-23 20:07:37.340 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 2 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-03-23 20:07:37.342 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-03-23 20:07:37.344 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-03-23 20:07:37.348 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-03-23 20:07:37.428 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 111 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-23 20:07:37.430 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-23 20:07:37.432 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-23 20:07:37.436 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-23 20:07:37.438 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 20:07:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-23 20:07:42.569 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 20:07:42.584 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-23 20:07:42 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-23 20:14:49.119 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 20:14:49.135 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-23 20:14:49 | 耗时 6 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-23 20:15:10.302 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 20:15:10.329 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 20:15:10 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET parent_id=139, menu_name='耗材审批', path='/admin/goods', component='admin/goods/Goods', icon='credit-card', type='0', order_num=2.0, modify_time='2022-03-23T20:15:10.320+0800' WHERE MENU_ID=143;
2022-03-23 20:15:10.333 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 20:15:10 | 耗时 2 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '143' );
2022-03-23 20:15:10.337 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 20:15:10 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='14' ;
2022-03-23 20:15:10.339 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 20:15:10 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-23 20:15:10.341 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-23 20:15:10 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-23 20:15:10.386 febs [asyncTaskExecutor-1] INFO  p6spy - 2022-03-23 20:15:10 | 耗时 22 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 33, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=143, parentId=139, menuName=耗材审批, path=/admin/goods, component=admin/goods/Goods, perms=null, icon=credit-card, type=0, orderNum=2.0, createTime=null, modifyTime=Wed Mar 23 20:15:10 CST 2022, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2022-03-23T20:15:10.360+0800', '' );
2022-03-23 20:15:10.581 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-23 20:15:10.586 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-23 20:15:10 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-23 21:05:26.879 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-23 21:15:36.315 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648037123611 paused.
2022-03-23 21:15:36.320 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-23 21:15:36.339 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-23 21:15:36.339 febs [Thread-29] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-23 21:15:36.340 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648037123611 shutting down.
2022-03-23 21:15:36.340 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648037123611 paused.
2022-03-23 21:15:36.341 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1648037123611 shutdown complete.
2022-03-23 21:15:36.346 febs [Thread-29] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-23 21:15:36.347 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-23 21:15:36.352 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
