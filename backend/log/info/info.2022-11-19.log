2022-11-19 14:44:39.672 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 15908 (started by Administrator in E:\Project\食堂采购系统\backend)
2022-11-19 14:44:39.675 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-11-19 14:44:40.699 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-19 14:44:40.701 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-11-19 14:44:40.760 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38ms. Found 0 repository interfaces.
2022-11-19 14:44:41.085 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$d0fdceb6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ab4d1a5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.324 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.335 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$41bea989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$ad3eab32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.721 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$a6036286] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.738 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.838 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.845 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$93460598] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.849 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$7f871623] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.862 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.864 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:41.867 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-11-19 14:44:41.874 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-11-19 14:44:42.119 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-11-19 14:44:42.119 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-11-19 14:44:42.119 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-11-19 14:44:42.120 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-11-19 14:44:42.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.741 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.746 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.749 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.770 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.771 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.778 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.779 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.780 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.817 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.835 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.859 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.860 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.862 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.882 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.884 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.909 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.913 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.934 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.936 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.949 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.967 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$9d52291a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.971 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$4f9eeb33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.973 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ab5d122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.979 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.982 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.986 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$31814850] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.997 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:42.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$7f5dc6a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.019 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.040 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.060 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.064 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.064 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 14:44:43.496 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-11-19 14:44:43.509 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-11-19 14:44:43.513 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-11-19 14:44:43.514 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-11-19 14:44:43.519 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-11-19 14:44:43.643 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-19 14:44:43.643 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3928 ms
2022-11-19 14:44:44.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-11-19 14:44:44.185 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-11-19 14:44:44.185 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-11-19 14:44:44.185 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-11-19 14:44:44.185 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-11-19 14:44:44.185 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-11-19 14:44:44.185 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-11-19 14:44:44.185 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-11-19 14:44:44.638 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-11-19 14:44:44.650 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-11-19 14:44:44.651 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-11-19 14:44:44.654 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-11-19 14:44:44.655 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-11-19 14:44:44.656 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1668840284641'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-11-19 14:44:44.656 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-11-19 14:44:44.656 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-11-19 14:44:44.658 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@10301d6f
2022-11-19 14:44:44.710 febs [main] INFO  p6spy - 2022-11-19 14:44:44 | 耗时 2 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-11-19 14:44:45.388 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-11-19 14:44:46.602 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-11-19 14:44:46.655 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-11-19 14:44:46.729 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-11-19 14:44:46.741 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-11-19 14:44:46.752 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-11-19 14:44:46.765 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-11-19 14:44:46.767 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.671 seconds (JVM running for 10.175)
2022-11-19 14:44:46.774 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-11-19 14:44:46.775 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-11-19 14:44:46.776 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-11-19 14:44:46.776 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-11-19 14:44:46.805 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-11-19 14:44:46.812 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 14:44:46.876 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-11-19 14:44:46.887 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-11-19 14:44:46.902 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-11-19 14:44:46.906 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 14:44:46.909 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-11-19 14:44:46.911 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-11-19 14:44:46.914 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-11-19 14:44:46.916 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 14:44:46.918 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-11-19 14:44:46.920 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-11-19 14:44:46.923 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-11-19 14:44:46.926 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 14:44:46.929 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-11-19 14:44:46.931 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-11-19 14:44:46.933 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-11-19 14:44:46.935 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 14:44:46.938 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-11-19 14:44:46.940 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-11-19 14:44:46.942 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-11-19 14:44:46.945 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 14:44:46.947 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-11-19 14:44:46.950 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-11-19 14:44:46.951 febs [main] INFO  p6spy - 2022-11-19 14:44:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-11-19 14:44:46.952 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-11-19 14:44:46.952 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-11-19 14:44:46.952 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-11-19 14:44:46.952 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-11-19 14:44:46.952 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-11-19T14:44:46.952
2022-11-19 14:44:47.469 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-11-19 14:44:47.470 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-11-19 14:44:47.481 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-11-19 14:44:47.736 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-11-19 14:44:47.747 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-11-19 14:44:47.747 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1648474255534"'s failed in-progress jobs.
2022-11-19 14:44:47.755 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668840284641 started.
2022-11-19 14:44:47.768 febs [RMI TCP Connection(3)-192.168.1.5] INFO  p6spy - 2022-11-19 14:44:47 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-11-19 14:56:39.470 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 14:56:39.586 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 14:56:39 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T14:56:39.558+0800' WHERE username = 'mrbird';
2022-11-19 14:56:39.591 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 14:56:39 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 14:56:39.612 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 14:56:39 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2022-11-19T14:56:39.601+0800', '', '127.0.0.1' );
2022-11-19 14:56:39.720 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 14:56:39.744 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 14:56:39 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2022-11-19 14:56:40.183 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 14:56:40.183 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 14:56:40.194 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 14:56:40.205 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 8 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 14:56:40.209 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 2 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 14:56:40.213 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 14:56:40.215 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 14:56:40.219 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 14:56:40.386 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 199 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 14:56:40.391 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 14:56:40.394 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 14:56:40.398 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 14:56:40.400 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 14:56:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-11-19 15:02:40.635 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 15:02:40.649 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:02:40 | 耗时 10 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T15:02:40.637+0800' WHERE username = 'admin';
2022-11-19 15:02:40.652 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:02:40 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 15:02:40.664 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:02:40 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-11-19T15:02:40.660+0800', '', '127.0.0.1' );
2022-11-19 15:02:40.684 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:02:40.689 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:02:40 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-11-19 15:02:41.012 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:02:41.012 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:02:41.017 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 3 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 15:02:41.020 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 15:02:41.024 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 2 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 15:02:41.025 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 15:02:41.027 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 15:02:41.028 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 15:02:41.041 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 26 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 15:02:41.042 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:02:41.044 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:02:41.046 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 15:02:41.048 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:02:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-11-19 15:02:46.950 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:02:47.011 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 15:02:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM student_info si LEFT JOIN t_user tu ON (tu.USER_ID = si.user_id) WHERE 1 = 1;
2022-11-19 15:02:47.015 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 15:02:47 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.team, si.user_id AS userId, si.content, si.create_date AS createDate, tu.USERNAME AS userName, tu.`STATUS` AS accountStatus, tu.LAST_LOGIN_TIME AS lastTime FROM student_info si LEFT JOIN t_user tu ON ( tu.USER_ID = si.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-11-19 15:03:19.274 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:03:19.279 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:03:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM student_info si LEFT JOIN t_user tu ON (tu.USER_ID = si.user_id) WHERE 1 = 1;
2022-11-19 15:03:19.281 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:03:19 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.team, si.user_id AS userId, si.content, si.create_date AS createDate, tu.USERNAME AS userName, tu.`STATUS` AS accountStatus, tu.LAST_LOGIN_TIME AS lastTime FROM student_info si LEFT JOIN t_user tu ON ( tu.USER_ID = si.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-11-19 15:03:47.345 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:03:47.358 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:03:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info;
2022-11-19 15:03:47.359 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:03:47 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info LIMIT 0,10;
2022-11-19 15:03:51.987 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:03:51.987 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:03:51.993 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:03:51 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 15:03:52.022 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:03:52 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM combo_info;
2022-11-19 15:03:52.023 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:03:52 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info LIMIT 0,10;
2022-11-19 15:18:20.874 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:18:20.874 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:18:20.879 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:18:20 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 15:18:20.884 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:18:20 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 15:18:20.888 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:18:20 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 15:18:20.890 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:18:20 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 15:18:20.892 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:18:20 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 15:18:20.894 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:18:20 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 15:18:21.512 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:18:21 | 耗时 635 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 15:18:21.513 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:18:21 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:18:21.516 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:18:21 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:18:21.518 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:18:21 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 15:18:21.520 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:18:21 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-11-19 15:20:47.458 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:20:47 | 耗时 12 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-11-19 15:20:47.466 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:20:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-11-19 15:31:50.173 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 15:31:50.222 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 43 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T15:31:50.176+0800' WHERE username = 'admin';
2022-11-19 15:31:50.227 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 15:31:50.263 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 11 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-11-19T15:31:50.233+0800', '', '127.0.0.1' );
2022-11-19 15:31:50.284 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:31:50.289 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-11-19 15:31:50.602 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:31:50.603 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:31:50.605 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 2 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 15:31:50.608 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 15:31:50.611 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 15:31:50.613 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 15:31:50.615 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 15:31:50.616 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 15:31:50.658 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 52 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 15:31:50.660 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:31:50.662 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:31:50.663 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 15:31:50.665 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:31:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-11-19 15:32:06.929 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:32:06.929 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:32:06.931 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 15:32:06 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 15:32:06.936 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:32:06 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM combo_info;
2022-11-19 15:32:06.937 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:32:06 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info LIMIT 0,10;
2022-11-19 15:32:16.091 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:32:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-11-19 15:32:16.098 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:32:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-11-19 15:44:46.749 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-11-19 15:48:31.732 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 15:48:31.745 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:48:31 | 耗时 6 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T15:48:31.734+0800' WHERE username = 'mrbird';
2022-11-19 15:48:31.751 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:48:31 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 15:48:31.763 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:48:31 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2022-11-19T15:48:31.758+0800', '', '127.0.0.1' );
2022-11-19 15:48:31.789 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:48:31.794 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:48:31 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2022-11-19 15:48:32.205 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:48:32.209 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 15:48:32.209 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:48:32.212 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 15:48:32.215 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 15:48:32.217 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 15:48:32.218 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 15:48:32.219 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 15:48:32.293 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 80 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 15:48:32.294 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:48:32.296 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:48:32.299 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 15:48:32.303 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:48:32 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-11-19 15:49:02.936 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 15:49:02.944 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:49:02 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T15:49:02.938+0800' WHERE username = 'lisi';
2022-11-19 15:49:02.947 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:49:02 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 15:49:02.959 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:49:02 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-11-19T15:49:02.954+0800', '', '127.0.0.1' );
2022-11-19 15:49:03.028 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-11-19 15:49:03.053 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:49:03.055 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-11-19 15:49:03.212 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:49:03.212 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:49:03.214 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 15:49:03.220 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 15:49:03.222 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 15:49:03.224 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 15:49:03.226 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 15:49:03.227 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 15:49:03.229 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 15:49:03.248 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 34 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 15:49:03.250 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:49:03.251 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:49:03.253 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 15:49:03.255 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 15:49:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 15:50:30.674 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:50:30.754 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:50:30 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 15:50:30.755 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:50:30 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 15:51:54.600 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:51:54.604 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 15:51:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 15:51:54.606 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 15:51:54 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 15:52:29.007 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:52:29.018 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:52:29 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 15:52:29.019 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:52:29 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 15:53:54.375 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:53:54.379 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:53:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 15:53:54.381 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:53:54 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 15:54:33.190 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:54:33.196 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:54:33 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 15:54:33.197 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:54:33 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 15:54:52.212 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:54:52.216 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:54:52 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 15:54:52.217 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:54:52 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 15:55:00.505 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:55:00.508 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 15:55:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 15:55:00.510 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 15:55:00 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 15:55:15.375 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:55:15.375 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:55:15.379 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:55:15 | 耗时 1 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 15:55:15.380 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:55:15 | 耗时 1 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info;
2022-11-19 15:55:17.235 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:55:17.243 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 15:55:17 | 耗时 1 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'COMBO-16464646455';
2022-11-19 15:55:31.419 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:55:31.485 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:55:31 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 15:55:31.552 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:55:31 | 耗时 6 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( '可口可乐', '300ml', '瓶', 2, 1, 'REQ-1668844531420', 8, '2022-11-19 15:55:31' );
2022-11-19 15:55:31.562 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:55:31 | 耗时 7 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( '汉堡', '汉堡王', '个', 1, 6, 'REQ-1668844531420', 32, '2022-11-19 15:55:31' );
2022-11-19 15:55:31.568 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:55:31 | 耗时 6 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( '大薯条', '汉堡王', '个', 1, 6, 'REQ-1668844531420', 18, '2022-11-19 15:55:31' );
2022-11-19 15:55:31.577 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:55:31 | 耗时 5 ms | SQL 语句：
INSERT INTO goods_request ( num, user_id, content, step, create_date ) VALUES ( 'REQ-1668844531420', 2, 'test', 0, '2022-11-19 15:55:31' );
2022-11-19 15:55:31.609 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:55:31.613 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 15:55:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 15:55:31.615 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 15:55:31 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 15:55:40.008 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:55:40.062 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 15:55:40 | 耗时 49 ms | SQL 语句：
DELETE FROM goods_request WHERE ID IN ( 4 );
2022-11-19 15:55:40.088 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:55:40.092 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:55:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 15:55:40.094 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:55:40 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 15:55:45.880 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:55:45.881 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:55:45.887 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 5 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 15:55:45.890 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 15:55:45.893 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 15:55:45.895 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 15:55:45.897 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 15:55:45.899 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 15:55:45.900 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 15:55:45.923 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 39 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 15:55:45.924 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:55:45.925 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:55:45.927 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 15:55:45.929 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 15:55:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 15:58:03.810 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:58:03.810 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 15:58:03.817 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 5 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 15:58:03.820 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 15:58:03.823 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 15:58:03.826 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 15:58:03.827 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 15:58:03.829 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 15:58:03.830 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 15:58:03.856 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 43 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 15:58:03.857 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:58:03.859 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 15:58:03.860 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 15:58:03.861 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 15:58:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:03:37.195 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:03:37.198 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:03:37.202 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:03:37.205 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:03:37.207 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:03:37.209 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:03:37.211 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:03:37.213 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:03:37.244 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:03:37.292 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 46 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:03:37.294 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:03:37.295 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:03:37.297 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:03:37.298 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:03:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:06:18.426 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:06:18.426 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:06:18.435 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 5 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:06:18.438 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:06:18.440 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:06:18.442 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:06:18.444 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:06:18.445 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:06:18.447 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:06:18.478 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 48 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:06:18.479 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:06:18.480 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:06:18.482 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:06:18.482 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:06:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:08:02.649 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:08:02.650 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:08:02.657 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 5 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:08:02.662 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:08:02.665 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:08:02.668 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:08:02.669 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:08:02.671 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:08:02.674 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:08:02.706 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 53 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:08:02.707 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:08:02.709 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:08:02.711 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:08:02.714 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:08:02 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:08:48.659 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:08:48.659 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:08:48.662 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:08:48.662 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:08:48.664 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:08:48.664 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:08:48.665 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:08:48.665 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:08:48.667 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:08:48.667 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:08:48.668 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:08:48.668 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:08:48.670 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:08:48.672 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:08:56.394 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:08:56.394 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:08:56.396 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:08:56.397 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:08:56.398 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:08:56.398 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:08:56.401 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:08:56.401 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:08:56.402 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:08:56.402 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:08:56.404 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:08:56.404 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:08:56.405 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:08:56.407 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:08:56 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:20:14.130 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 16:20:14.142 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T16:20:14.131+0800' WHERE username = 'admin';
2022-11-19 16:20:14.146 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:20:14.160 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-11-19T16:20:14.153+0800', '', '127.0.0.1' );
2022-11-19 16:20:14.179 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:20:14.186 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-11-19 16:20:14.474 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:20:14.477 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:20:14.477 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:20:14.481 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:20:14.484 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:20:14.487 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:20:14.488 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:20:14.490 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:20:14.613 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 134 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:20:14.615 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:20:14.616 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:20:14.618 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:20:14.620 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-11-19 16:20:31.396 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:20:31.396 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:20:31.398 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:20:31.401 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:20:31 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info;
2022-11-19 16:20:31.408 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:20:31 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 16:20:31.411 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:20:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-11-19 16:20:31.413 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:20:31 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-11-19 16:20:31.420 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:20:31.422 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:20:31 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 16:20:50.061 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:20:50.074 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:50 | 耗时 0 ms | SQL 语句：
UPDATE goods_request SET step=1 WHERE ID = NULL;
2022-11-19 16:20:50.096 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:50 | 耗时 11 ms | SQL 语句：
INSERT INTO stock_out ( num, user_id, price, custodian, handler, create_date ) VALUES ( 'OUT-1668846050080', 2, 5400, '樊可', '樊可', '2022-11-19 16:20:50' );
2022-11-19 16:20:50.109 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:50 | 耗时 3 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE name = 'i9 9900k' AND is_in = 0;
2022-11-19 16:20:50.119 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:50 | 耗时 6 ms | SQL 语句：
UPDATE stock_info SET amount=2 WHERE ID = 22;
2022-11-19 16:20:50.128 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:50 | 耗时 5 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in, to_user_id, parent_id ) VALUES ( 'i9 9900k', 7, '英特尔® 酷睿™ i9-9900K 处理器 ', 1, '颗', 5400, '2022-11-19 16:20:50', 2, 2, 22 );
2022-11-19 16:20:50.145 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:20:50 | 耗时 16 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( 'i9 9900k', '英特尔® 酷睿™ i9-9900K 处理器 ', '颗', 1, 7, 'OUT-1668846050080', 5400, '2022-11-19 16:20:50' );
2022-11-19 16:20:50.205 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:20:50.209 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:20:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-11-19 16:20:50.211 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:20:50 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-11-19 16:21:09.896 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 16:21:09.909 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:21:09 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T16:21:09.898+0800' WHERE username = 'lisi';
2022-11-19 16:21:09.912 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:21:09 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:21:09.928 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:21:09 | 耗时 5 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-11-19T16:21:09.921+0800', '', '127.0.0.1' );
2022-11-19 16:21:09.943 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:21:09 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-11-19 16:21:09.952 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:21:09.956 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:21:09 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-11-19 16:21:10.153 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:21:10.155 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:21:10.155 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:21:10.158 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:21:10.160 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:21:10.161 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:21:10.163 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:21:10.164 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:21:10.165 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:21:10.200 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 44 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:21:10.202 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:21:10.204 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:21:10.205 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:21:10.207 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:21:10 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:21:16.518 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:21:16.518 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:21:16.520 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:21:16 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 16:21:16.523 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:21:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-11-19 16:21:16.525 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:21:16 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableName FROM stock_info si LEFT JOIN student_info stu ON ( stu.id = si.to_user_id ) LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15 LIMIT 0,10;
2022-11-19 16:22:11.277 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:22:11.277 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:22:11.283 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 3 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:22:11.287 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:22:11.291 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:22:11.293 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:22:11.295 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:22:11.297 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:22:11.299 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:22:11.319 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 40 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:22:11.321 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:22:11.323 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:22:11.324 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:22:11.326 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:22:11 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:44:46.740 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-11-19 16:47:23.554 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668840284641 paused.
2022-11-19 16:47:23.555 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-11-19 16:47:23.566 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-11-19 16:47:23.567 febs [Thread-20] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-11-19 16:47:23.567 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668840284641 shutting down.
2022-11-19 16:47:23.567 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668840284641 paused.
2022-11-19 16:47:23.569 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668840284641 shutdown complete.
2022-11-19 16:47:23.572 febs [Thread-20] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-11-19 16:47:23.572 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-11-19 16:47:23.577 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-11-19 16:47:31.542 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 4556 (started by Administrator in E:\Project\食堂采购系统\backend)
2022-11-19 16:47:31.545 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-11-19 16:47:32.348 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-19 16:47:32.350 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-11-19 16:47:32.405 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43ms. Found 0 repository interfaces.
2022-11-19 16:47:32.681 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$b5be6712] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:32.791 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:32.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$900db2b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:32.884 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:32.887 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:32.896 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$267f41e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:32.911 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$91ff438e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$8ac3fae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.332 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.337 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.425 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.433 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$78069df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$6447ae7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.453 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.459 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-11-19 16:47:33.467 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-11-19 16:47:33.652 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-11-19 16:47:33.652 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-11-19 16:47:33.653 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-11-19 16:47:33.653 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-11-19 16:47:33.653 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:33.670 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.235 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.245 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.274 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.280 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.282 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.338 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.371 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.396 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.397 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.421 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.422 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.425 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.462 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.480 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$8212c176] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$345f838f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.487 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ef76697e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.499 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.508 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$1641e0ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.514 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.517 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$641e5f05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.527 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.532 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.534 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.551 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.564 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.568 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.568 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.574 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.587 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:47:34.938 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-11-19 16:47:34.951 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-11-19 16:47:34.956 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-11-19 16:47:34.956 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-11-19 16:47:34.961 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-11-19 16:47:35.084 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-19 16:47:35.084 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3497 ms
2022-11-19 16:47:35.668 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-11-19 16:47:35.668 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-11-19 16:47:35.668 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-11-19 16:47:35.668 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-11-19 16:47:35.668 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-11-19 16:47:35.668 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-11-19 16:47:35.668 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-11-19 16:47:35.668 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-11-19 16:47:36.107 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-11-19 16:47:36.118 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-11-19 16:47:36.118 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-11-19 16:47:36.121 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-11-19 16:47:36.123 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-11-19 16:47:36.123 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1668847656108'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-11-19 16:47:36.123 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-11-19 16:47:36.123 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-11-19 16:47:36.124 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7be859de
2022-11-19 16:47:36.173 febs [main] INFO  p6spy - 2022-11-19 16:47:36 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-11-19 16:47:36.722 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-11-19 16:47:37.894 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-11-19 16:47:37.945 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-11-19 16:47:38.019 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-11-19 16:47:38.032 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-11-19 16:47:38.042 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-11-19 16:47:38.042 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-11-19 16:47:38.058 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-11-19 16:47:38.060 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.27 seconds (JVM running for 8.281)
2022-11-19 16:47:38.069 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-11-19 16:47:38.071 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-11-19 16:47:38.071 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-11-19 16:47:38.098 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-11-19 16:47:38.105 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:47:38.167 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-11-19 16:47:38.193 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 16 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-11-19 16:47:38.206 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-11-19 16:47:38.209 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:47:38.212 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-11-19 16:47:38.214 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-11-19 16:47:38.217 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-11-19 16:47:38.218 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:47:38.221 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-11-19 16:47:38.224 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-11-19 16:47:38.226 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-11-19 16:47:38.228 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:47:38.232 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-11-19 16:47:38.235 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-11-19 16:47:38.236 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-11-19 16:47:38.238 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:47:38.240 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-11-19 16:47:38.243 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-11-19 16:47:38.244 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-11-19 16:47:38.246 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:47:38.248 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-11-19 16:47:38.251 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-11-19 16:47:38.252 febs [main] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-11-19 16:47:38.253 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-11-19 16:47:38.253 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-11-19 16:47:38.253 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-11-19 16:47:38.253 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-11-19 16:47:38.253 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-11-19T16:47:38.253
2022-11-19 16:47:38.654 febs [RMI TCP Connection(2)-192.168.1.5] INFO  p6spy - 2022-11-19 16:47:38 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-11-19 16:47:38.655 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-11-19 16:47:38.655 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-11-19 16:47:38.667 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-11-19 16:47:39.032 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-11-19 16:47:39.082 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668847656108 started.
2022-11-19 16:47:54.055 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1668847656108_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-11-19 16:47:54.055 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1668847656108_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1668840284641"'s failed in-progress jobs.
2022-11-19 16:48:45.456 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:48:45.456 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:48:45.512 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 20 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:48:45.532 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:48:45.536 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:48:45.539 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:48:45.541 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:48:45.543 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:48:45.547 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:48:45.591 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 37 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:48:45.593 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:48:45.594 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:48:45.596 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:48:45.598 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:48:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:48:55.131 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:48:55.133 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:48:55.135 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:48:55.137 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:48:55.139 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:48:55.141 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:48:55.143 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 6 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:48:55.143 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:48:55.144 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:48:55.144 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:48:55.146 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:48:55.146 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:48:55.147 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:48:55.150 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:48:55 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:49:22.560 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:49:22.560 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:49:22.562 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:49:22.565 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:49:22.566 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:49:22.567 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:49:22.568 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:49:22.569 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:49:22.570 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:49:22.571 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:49:22.571 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:49:22.572 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:49:22.575 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:49:22.576 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:49:22 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:51:05.374 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:51:05.374 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:51:05.396 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 18 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:51:05.400 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:51:05.403 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:51:05.405 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:51:05.407 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:51:05.408 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:51:05.409 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:51:05.427 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:51:05.432 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 55 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:51:05.433 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:51:05.435 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:51:05.437 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:51:05.437 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 16:51:05.438 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:51:05.442 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:51:05 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 16:51:16.112 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:51:16.113 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:51:16.114 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:51:16.116 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:51:16.117 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:51:16.118 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:51:16.119 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:51:16.119 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:51:16.121 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:51:16.121 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:51:16.123 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:51:16.123 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:51:16.125 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:51:16.126 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:51:16.146 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:51:16.149 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 16:51:16.151 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:51:16 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 16:52:21.518 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668847656108 paused.
2022-11-19 16:52:21.518 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-11-19 16:52:21.524 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-11-19 16:52:21.524 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-11-19 16:52:21.524 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668847656108 shutting down.
2022-11-19 16:52:21.524 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668847656108 paused.
2022-11-19 16:52:21.525 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668847656108 shutdown complete.
2022-11-19 16:52:21.529 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-11-19 16:52:21.530 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-11-19 16:52:21.532 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-11-19 16:52:27.512 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 3668 (started by Administrator in E:\Project\食堂采购系统\backend)
2022-11-19 16:52:27.572 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-11-19 16:52:28.344 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-19 16:52:28.346 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-11-19 16:52:28.394 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36ms. Found 0 repository interfaces.
2022-11-19 16:52:28.694 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$c59fbb3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:28.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:28.880 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9fef06e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:28.888 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:28.891 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:28.899 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$36609611] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:28.912 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a1e097ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$9aa54f0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.302 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.383 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.391 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$87e7f220] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.395 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.401 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$742902ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.413 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.416 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-11-19 16:52:29.423 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-11-19 16:52:29.612 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-11-19 16:52:29.612 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-11-19 16:52:29.612 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-11-19 16:52:29.612 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-11-19 16:52:29.612 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:29.630 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.168 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.194 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.196 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.246 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.292 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.293 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.354 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.355 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.385 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$91f415a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.390 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$4440d7bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ff57bdaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.398 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.404 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$262334d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.409 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$73ffb331] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.421 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.423 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.427 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.446 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.459 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.470 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.482 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 16:52:30.759 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-11-19 16:52:30.768 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-11-19 16:52:30.773 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-11-19 16:52:30.773 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-11-19 16:52:30.779 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-11-19 16:52:30.927 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-19 16:52:30.927 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3318 ms
2022-11-19 16:52:31.436 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-11-19 16:52:31.437 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-11-19 16:52:31.437 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-11-19 16:52:31.437 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-11-19 16:52:31.437 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-11-19 16:52:31.437 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-11-19 16:52:31.437 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-11-19 16:52:31.437 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-11-19 16:52:31.888 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-11-19 16:52:31.899 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-11-19 16:52:31.900 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-11-19 16:52:31.902 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-11-19 16:52:31.904 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-11-19 16:52:31.904 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1668847951890'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-11-19 16:52:31.904 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-11-19 16:52:31.904 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-11-19 16:52:31.906 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5ddf5118
2022-11-19 16:52:31.970 febs [main] INFO  p6spy - 2022-11-19 16:52:31 | 耗时 23 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-11-19 16:52:32.553 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-11-19 16:52:33.664 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-11-19 16:52:33.715 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-11-19 16:52:33.788 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-11-19 16:52:33.801 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-11-19 16:52:33.811 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-11-19 16:52:33.812 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-11-19 16:52:33.824 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-11-19 16:52:33.827 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.822 seconds (JVM running for 7.738)
2022-11-19 16:52:33.836 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-11-19 16:52:33.837 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-11-19 16:52:33.837 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-11-19 16:52:33.886 febs [main] INFO  p6spy - 2022-11-19 16:52:33 | 耗时 23 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-11-19 16:52:33.895 febs [main] INFO  p6spy - 2022-11-19 16:52:33 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:52:33.953 febs [main] INFO  p6spy - 2022-11-19 16:52:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-11-19 16:52:33.981 febs [main] INFO  p6spy - 2022-11-19 16:52:33 | 耗时 18 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-11-19 16:52:33.995 febs [main] INFO  p6spy - 2022-11-19 16:52:33 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-11-19 16:52:33.999 febs [main] INFO  p6spy - 2022-11-19 16:52:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:52:34.001 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-11-19 16:52:34.003 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-11-19 16:52:34.006 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-11-19 16:52:34.008 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:52:34.011 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-11-19 16:52:34.013 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-11-19 16:52:34.016 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-11-19 16:52:34.018 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:52:34.021 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-11-19 16:52:34.024 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-11-19 16:52:34.026 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-11-19 16:52:34.028 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:52:34.030 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-11-19 16:52:34.032 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-11-19 16:52:34.034 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-11-19 16:52:34.036 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 16:52:34.038 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-11-19 16:52:34.040 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-11-19 16:52:34.041 febs [main] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-11-19 16:52:34.042 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-11-19 16:52:34.042 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-11-19 16:52:34.042 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-11-19 16:52:34.042 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-11-19 16:52:34.042 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-11-19T16:52:34.042
2022-11-19 16:52:34.426 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-11-19 16:52:34.426 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-11-19 16:52:34.438 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-11-19 16:52:34.718 febs [RMI TCP Connection(3)-192.168.1.5] INFO  p6spy - 2022-11-19 16:52:34 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-11-19 16:52:34.798 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-11-19 16:52:34.827 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-11-19 16:52:34.827 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1668847656108"'s failed in-progress jobs.
2022-11-19 16:52:34.847 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668847951890 started.
2022-11-19 16:54:36.726 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:54:36.728 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:54:36.769 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:54:36.797 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:54:36.800 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:54:36.804 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:54:36.805 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:54:36.807 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:54:36.810 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:54:36.891 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 47 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:54:36.895 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:54:36.897 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:54:36.900 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:54:36.902 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:54:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:54:37.120 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:54:37.132 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:54:37 | 耗时 2 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 16:54:37.137 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:54:37 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 16:54:37.142 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:54:37 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 16:54:37.147 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 16:54:37 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 16:56:04.041 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:56:04.041 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:56:04.045 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:56:04.050 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:56:04.053 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:56:04.055 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:56:04.057 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:56:04.058 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:56:04.060 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:56:04.079 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:56:04.082 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 38 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:56:04.083 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 16:56:04.084 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:56:04.085 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 16:56:04.085 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:56:04.087 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:56:04.087 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 16:56:04.088 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 16:56:04.088 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:56:04 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:57:37.706 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:57:37.706 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:57:37.710 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:57:37.713 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:57:37.716 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:57:37.719 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:57:37.721 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:57:37.723 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:57:37.725 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:57:37.743 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:57:37.747 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 16:57:37.748 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 16:57:37.750 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 16:57:37.752 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 16:57:37.755 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 46 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:57:37.757 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:57:37.758 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:57:37.759 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:57:37.761 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:57:37.946 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:57:37.946 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:57:37.948 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:57:37.951 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:57:37.953 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:57:37.954 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 6 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:57:37.955 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:57:37.956 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:57:37.956 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:57:37.958 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:57:37.958 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:57:37.959 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:57:37.959 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:57:37.961 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:57:37.988 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:57:37.991 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 16:57:37.993 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 16:57:37.995 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 16:57:37.997 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:57:37 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 16:57:42.929 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:57:42.932 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:57:42.933 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:57:42.934 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:57:42.936 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:57:42.936 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:57:42.937 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:57:42.937 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:57:42.939 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:57:42.939 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:57:42.940 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:57:42.940 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:57:42.942 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:57:42.942 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:57:42.958 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:57:42.961 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 16:57:42.963 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 16:57:42.965 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 16:57:42.967 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:57:42 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 16:58:34.274 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:58:34.274 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:58:34.276 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:58:34.277 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:58:34.279 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:58:34.279 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:58:34.280 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:58:34.281 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:58:34.282 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:58:34.283 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:58:34.283 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:58:34.285 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:58:34.287 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:58:34.289 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:58:34.344 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:58:34.346 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 16:58:34.348 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 16:58:34.350 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 16:58:34.351 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 16:58:34 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 16:59:12.239 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:59:12.239 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:59:12.249 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 8 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 16:59:12.252 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 16:59:12.255 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 16:59:12.257 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 16:59:12.259 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 16:59:12.261 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 16:59:12.262 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 16:59:12.298 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 57 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 16:59:12.300 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:59:12.302 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 16:59:12.303 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 16:59:12.305 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 16:59:12.371 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 16:59:12.374 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 16:59:12.376 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 16:59:12.378 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 16:59:12.380 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 16:59:12 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:01:08.922 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:01:08.922 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:01:08.925 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:01:08.928 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:01:08.930 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:01:08.932 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:01:08.935 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:01:08.936 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:01:08.937 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:01:08.966 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 41 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:01:08.967 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:01:08.969 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:01:08.970 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:01:08.972 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:01:08 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:01:08.997 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:01:09.002 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:01:09 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:01:09.004 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:01:09 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:01:09.007 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:01:09 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:01:09.009 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:01:09 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:02:30.363 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:02:30.363 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:02:30.366 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:02:30.367 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:02:30.368 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:02:30.368 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:02:30.369 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:02:30.369 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:02:30.370 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:02:30.370 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:02:30.372 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:02:30.373 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:02:30.376 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:02:30.377 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:02:30.446 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:02:30.448 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:02:30.450 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:02:30.452 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:02:30.453 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:02:30 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:03:09.514 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:03:09.517 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:03:09.546 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 30 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:03:09.549 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:03:09.551 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:03:09.553 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:03:09.554 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:03:09.556 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:03:09.557 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:03:09.590 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 71 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:03:09.592 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:03:09.593 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:03:09.595 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:03:09.596 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:03:09.620 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:03:09.624 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:03:09.626 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:03:09.628 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:03:09.629 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:03:09.795 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:03:09.795 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:03:09.797 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:03:09.797 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:03:09.798 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:03:09.798 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:03:09.800 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:03:09.800 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:03:09.801 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:03:09.801 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:03:09.802 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:03:09.802 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:03:09.804 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:03:09.805 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:03:09.849 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:03:09.851 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:03:09.853 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:03:09.855 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:03:09.856 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:03:09 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:03:14.547 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:03:14.548 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:03:14.550 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:03:14.552 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:03:14.552 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:03:14.553 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:03:14.554 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:03:14.555 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:03:14.555 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:03:14.556 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:03:14.556 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:03:14.558 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:03:14.558 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:03:14.559 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:03:14.613 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:03:14.616 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:03:14.618 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:03:14.620 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:03:14.621 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:03:14 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:04:12.196 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:04:12.196 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:04:12.198 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:04:12.200 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:04:12.202 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:04:12.204 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:04:12.206 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:04:12.207 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 9 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:04:12.207 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:04:12.209 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:04:12.209 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:04:12.211 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:04:12.213 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:04:12.214 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:04:12.470 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:04:12.473 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:04:12.474 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:04:12.477 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:04:12.478 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:05:18.262 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:18.262 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:18.265 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:05:18.268 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:05:18.271 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:18.273 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:05:18.275 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:18.277 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:05:18.279 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:05:18.307 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 42 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:05:18.308 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:05:18.310 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:05:18.311 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:05:18.313 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:05:18.327 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:18.331 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:05:18.334 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:18.336 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:05:18.337 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:05:18.506 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:18.508 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:05:18.510 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:05:18.512 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:18.513 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:05:18.514 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:18.515 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:18.517 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:05:18.518 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:05:18.525 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 8 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:05:18.526 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:05:18.528 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:05:18.529 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:05:18.531 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:05:18.559 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:18.562 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:05:18.564 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:18.566 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:05:18.568 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:05:18 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:05:47.942 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:47.944 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:05:47.946 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:05:47.949 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:47.950 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:05:47.952 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:47.953 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:05:47.955 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:05:47.955 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:47.959 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:05:47.960 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:05:47.962 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:05:47.977 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:05:47.979 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:05:47 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:05:48.072 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:48.083 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:05:48 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:05:48.085 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:05:48 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:48.087 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:05:48 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:05:48.088 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:05:48 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:05:53.068 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:53.069 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:53.070 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:05:53.072 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:05:53.074 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:53.076 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:05:53.078 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:53.080 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:05:53.081 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:05:53.096 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 25 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:05:53.098 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:05:53.099 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:05:53.101 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:05:53.102 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:05:53.148 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:05:53.150 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:05:53.152 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:05:53.154 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:05:53.155 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:05:53 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:06:28.388 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:06:28.390 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:06:28.390 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:06:28.393 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:06:28.394 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:06:28.396 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:06:28.398 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:06:28.399 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:06:28.401 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:06:28.404 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 12 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:06:28.406 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:06:28.407 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:06:28.409 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:06:28.410 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:06:28.452 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:06:28.455 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:06:28.457 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:06:28.459 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:06:28.460 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:06:28 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:06:59.659 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:06:59.661 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:06:59.663 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 2 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:06:59.666 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:06:59.668 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:06:59.671 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:06:59.672 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:06:59.674 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:06:59.675 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:06:59.703 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 39 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:06:59.704 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:06:59.705 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:06:59.707 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:06:59.708 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:06:59.727 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:06:59.731 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:06:59.733 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:06:59.735 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:06:59.736 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:06:59 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:07:11.111 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:07:11.112 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:07:11.113 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:07:11.114 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:07:11.116 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:07:11.117 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:07:11.118 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:07:11.118 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:07:11.119 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:07:11.120 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:07:11.120 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:07:11.121 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:07:11.122 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:07:11.123 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:07:11.205 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:07:11.208 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:07:11.209 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:07:11.211 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:07:11.212 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:07:11 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:08:02.873 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:02.873 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:02.875 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:08:02.876 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:08:02.877 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:08:02.877 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:08:02.878 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:08:02.878 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:02.880 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:08:02.880 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:08:02.882 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:08:02.882 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:02.884 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:08:02.885 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:08:02.940 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:02.942 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:08:02.944 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:02.946 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:08:02.948 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:08:14.287 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:14.287 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:14.289 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:08:14.290 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:08:14.291 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:08:14.291 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:08:14.292 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:14.293 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:08:14.294 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:08:14.294 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:08:14.295 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:08:14.296 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:14.297 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:08:14.299 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:08:14.338 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:14.341 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:08:14.343 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:14.345 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:08:14.346 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:08:14 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:08:18.227 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:18.230 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:18.231 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:08:18.232 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:08:18.234 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:08:18.235 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:08:18.235 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:08:18.236 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:08:18.236 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:18.238 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:08:18.238 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:08:18.240 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:18.241 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:08:18.243 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:08:18.557 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:18.560 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:08:18.561 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:18.563 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:08:18.564 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:08:18 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:08:55.477 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:55.477 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:55.480 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:08:55.483 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:08:55.486 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:55.488 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:08:55.490 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:55.492 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:08:55.494 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:08:55.511 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:08:55.513 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 33 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:08:55.514 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:08:55.514 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:08:55.515 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:08:55.516 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:08:55.518 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:08:55.518 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:08:55.519 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:08:55.519 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:08:55 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:09:25.389 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 17:09:25.399 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:09:25 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'zhangsan';
2022-11-19 17:09:33.070 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 17:09:33.084 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T17:09:33.072+0800' WHERE username = 'admin';
2022-11-19 17:09:33.088 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:09:33.107 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-11-19T17:09:33.100+0800', '', '127.0.0.1' );
2022-11-19 17:09:33.139 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:09:33.150 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-11-19 17:09:33.465 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:09:33.466 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:09:33.468 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:09:33.469 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:09:33.470 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:09:33.470 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:09:33.471 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:09:33.471 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:09:33.472 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:09:33.472 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:09:33.474 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-11-19 17:09:33.474 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:09:33.475 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:09:33 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:09:41.018 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:09:41.073 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:09:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM student_info si LEFT JOIN t_user tu ON (tu.USER_ID = si.user_id) WHERE 1 = 1;
2022-11-19 17:09:41.077 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:09:41 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.team, si.user_id AS userId, si.content, si.create_date AS createDate, tu.USERNAME AS userName, tu.`STATUS` AS accountStatus, tu.LAST_LOGIN_TIME AS lastTime FROM student_info si LEFT JOIN t_user tu ON ( tu.USER_ID = si.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-11-19 17:09:53.554 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 17:09:53.560 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T17:09:53.556+0800' WHERE username = 'jack';
2022-11-19 17:09:53.566 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:09:53.575 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'jack', '2022-11-19T17:09:53.573+0800', '', '127.0.0.1' );
2022-11-19 17:09:53.594 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:09:53.597 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack') order by m.order_num;
2022-11-19 17:09:53.895 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:09:53.897 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:09:53.897 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:09:53.899 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:09:53.900 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:09:53.904 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:09:53.906 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:09:53.908 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:09:53.932 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 32 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:09:53.934 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:09:53.935 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:09:53.937 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:09:53.938 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:09:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'jack' group by days;
2022-11-19 17:10:14.405 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 4 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 17:10:14.410 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T17:10:14.406+0800' WHERE username = 'mrbird';
2022-11-19 17:10:14.411 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:10:14.423 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2022-11-19T17:10:14.419+0800', '', '127.0.0.1' );
2022-11-19 17:10:14.441 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:14.444 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2022-11-19 17:10:14.677 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:14.677 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:14.679 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:10:14.681 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:10:14.683 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:10:14.684 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:10:14.686 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:10:14.688 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:10:14.739 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 60 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:10:14.741 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:10:14.742 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:10:14.743 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:10:14.745 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:10:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-11-19 17:10:19.896 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:19.896 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:19.917 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:10:19 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,parent_id,dept_name,order_num,create_time,modify_time FROM t_dept ORDER BY order_num ASC;
2022-11-19 17:10:19.935 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:10:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2022-11-19 17:10:19.937 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:10:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2022-11-19 17:10:22.851 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:22.855 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:10:22 | 耗时 0 ms | SQL 语句：
SELECT DEPT_ID,parent_id,dept_name,order_num,create_time,modify_time FROM t_dept ORDER BY order_num ASC;
2022-11-19 17:10:22.855 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:22.867 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:10:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-11-19 17:10:22.868 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:10:22 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-11-19 17:10:30.524 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:30.564 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:30 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET username='jack', dept_id=6, email='jack@hotmail.com', status='1', modify_time='2022-11-19T17:10:30.561+0800', ssex='0' WHERE USER_ID=12;
2022-11-19 17:10:30.567 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:30 | 耗时 0 ms | SQL 语句：
DELETE FROM t_user_role WHERE user_id = 12;
2022-11-19 17:10:30.572 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:30 | 耗时 2 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 12, 74 );
2022-11-19 17:10:30.574 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:30 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:10:30.576 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:30 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-11-19 17:10:30.577 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:30 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-11-19 17:10:30.605 febs [asyncTaskExecutor-1] INFO  p6spy - 2022-11-19 17:10:30 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改用户', 29, 'cc.mrbird.febs.system.controller.UserController.updateUser()', ' user: "User(userId=12, username=jack, password=null, deptId=6, deptName=null, email=jack@hotmail.com, mobile=null, status=1, createTime=null, modifyTime=Sat Nov 19 17:10:30 CST 2022, lastLoginTime=null, ssex=0, description=null, avatar=null, roleId=74, roleName=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null)"', '127.0.0.1', '2022-11-19T17:10:30.597+0800', '' );
2022-11-19 17:10:30.646 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:30.661 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:10:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2022-11-19 17:10:30.664 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:10:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2022-11-19 17:10:39.945 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 17:10:39.951 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:10:39 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T17:10:39.947+0800' WHERE username = 'jack';
2022-11-19 17:10:39.955 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:10:39 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:10:39.966 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:10:39 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'jack', '2022-11-19T17:10:39.963+0800', '', '127.0.0.1' );
2022-11-19 17:10:39.989 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:39.993 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:10:39 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack') order by m.order_num;
2022-11-19 17:10:40.141 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:40.144 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:10:40.145 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:40.147 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 12;
2022-11-19 17:10:40.149 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:10:40.151 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:10:40.155 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:10:40.156 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:10:40.158 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:10:40.221 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:10:40.225 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '1';
2022-11-19 17:10:40.227 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-11-19 17:10:40.229 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '1';
2022-11-19 17:10:40.230 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:10:40.233 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 85 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:10:40.234 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:10:40.235 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:10:40.239 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:10:40.241 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:10:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'jack' group by days;
2022-11-19 17:11:31.589 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668847951890 paused.
2022-11-19 17:11:31.589 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-11-19 17:11:31.596 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-11-19 17:11:31.597 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-11-19 17:11:31.597 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668847951890 shutting down.
2022-11-19 17:11:31.598 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668847951890 paused.
2022-11-19 17:11:31.600 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668847951890 shutdown complete.
2022-11-19 17:11:31.602 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-11-19 17:11:31.603 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-11-19 17:11:31.609 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-11-19 17:11:35.060 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 16160 (started by Administrator in E:\Project\食堂采购系统\backend)
2022-11-19 17:11:35.063 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-11-19 17:11:35.912 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-19 17:11:35.913 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-11-19 17:11:35.959 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34ms. Found 0 repository interfaces.
2022-11-19 17:11:36.262 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$f0764252] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.376 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$cac58df6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.459 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.461 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.470 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$61371d25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.485 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$ccb71ece] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.833 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c57bd622] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.849 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.852 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.932 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.939 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$b2be7934] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.948 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9eff89bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.956 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.958 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:36.960 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-11-19 17:11:36.967 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-11-19 17:11:37.136 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-11-19 17:11:37.136 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-11-19 17:11:37.137 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-11-19 17:11:37.137 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-11-19 17:11:37.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.148 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.156 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.713 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.719 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.722 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.723 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.742 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.748 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.749 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.750 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.784 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.802 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.825 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.826 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.828 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.850 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.851 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.875 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.878 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.911 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.913 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.914 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.926 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$bcca9cb6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.946 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$6f175ecf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.948 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$2a2e44be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.953 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.956 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.961 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$50f9bbec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.966 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$9ed63a45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.977 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.978 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.981 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:37.983 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:38.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:38.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:38.015 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:38.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:38.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:38.033 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:11:38.314 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-11-19 17:11:38.323 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-11-19 17:11:38.327 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-11-19 17:11:38.328 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-11-19 17:11:38.333 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-11-19 17:11:38.458 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-19 17:11:38.458 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3303 ms
2022-11-19 17:11:38.954 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-11-19 17:11:38.955 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-11-19 17:11:38.955 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-11-19 17:11:38.955 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-11-19 17:11:38.955 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-11-19 17:11:38.955 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-11-19 17:11:38.955 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-11-19 17:11:38.956 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-11-19 17:11:39.410 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-11-19 17:11:39.420 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-11-19 17:11:39.420 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-11-19 17:11:39.423 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-11-19 17:11:39.427 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-11-19 17:11:39.428 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1668849099411'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-11-19 17:11:39.428 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-11-19 17:11:39.428 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-11-19 17:11:39.429 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5690c2a8
2022-11-19 17:11:39.476 febs [main] INFO  p6spy - 2022-11-19 17:11:39 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-11-19 17:11:40.042 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-11-19 17:11:41.170 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-11-19 17:11:41.220 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-11-19 17:11:41.305 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-11-19 17:11:41.318 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-11-19 17:11:41.330 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-11-19 17:11:41.330 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-11-19 17:11:41.343 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-11-19 17:11:41.345 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.792 seconds (JVM running for 7.695)
2022-11-19 17:11:41.355 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-11-19 17:11:41.356 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-11-19 17:11:41.356 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-11-19 17:11:41.385 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-11-19 17:11:41.395 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:11:41.462 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-11-19 17:11:41.472 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-11-19 17:11:41.486 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-11-19 17:11:41.491 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:11:41.493 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-11-19 17:11:41.495 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-11-19 17:11:41.498 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-11-19 17:11:41.500 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:11:41.502 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-11-19 17:11:41.505 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-11-19 17:11:41.506 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-11-19 17:11:41.509 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:11:41.512 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-11-19 17:11:41.515 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-11-19 17:11:41.516 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-11-19 17:11:41.518 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:11:41.521 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-11-19 17:11:41.523 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-11-19 17:11:41.524 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-11-19 17:11:41.526 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:11:41.528 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-11-19 17:11:41.530 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-11-19 17:11:41.531 febs [main] INFO  p6spy - 2022-11-19 17:11:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-11-19 17:11:41.532 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-11-19 17:11:41.532 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-11-19 17:11:41.532 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-11-19 17:11:41.532 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-11-19 17:11:41.532 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-11-19T17:11:41.532
2022-11-19 17:11:42.184 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-11-19 17:11:42.184 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-11-19 17:11:42.184 febs [RMI TCP Connection(2)-192.168.1.5] INFO  p6spy - 2022-11-19 17:11:42 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-11-19 17:11:42.196 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-11-19 17:11:42.307 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-11-19 17:11:42.340 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668849099411 started.
2022-11-19 17:11:54.322 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:11:54.322 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:11:54.361 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:11:54.382 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 12;
2022-11-19 17:11:54.384 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:11:54.387 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:11:54.390 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:11:54.392 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:11:54.394 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:11:54.493 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 57 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:11:54.495 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:11:54.497 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:11:54.499 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:11:54.502 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'jack' group by days;
2022-11-19 17:11:54.547 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:11:54.557 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '1';
2022-11-19 17:11:54.562 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) WHERE oi.user_id = '1' GROUP BY days ORDER BY days ASC;
2022-11-19 17:11:54.566 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '1';
2022-11-19 17:11:54.572 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:11:54 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:11:57.351 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1668849099411_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-11-19 17:11:57.351 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1668849099411_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1668847951890"'s failed in-progress jobs.
2022-11-19 17:12:53.930 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668849099411 paused.
2022-11-19 17:12:53.931 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-11-19 17:12:53.936 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-11-19 17:12:53.937 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-11-19 17:12:53.937 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668849099411 shutting down.
2022-11-19 17:12:53.937 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668849099411 paused.
2022-11-19 17:12:53.938 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668849099411 shutdown complete.
2022-11-19 17:12:53.942 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-11-19 17:12:53.943 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-11-19 17:12:53.945 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-11-19 17:12:57.489 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 18416 (started by Administrator in E:\Project\食堂采购系统\backend)
2022-11-19 17:12:57.492 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-11-19 17:12:58.304 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-19 17:12:58.306 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-11-19 17:12:58.361 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41ms. Found 0 repository interfaces.
2022-11-19 17:12:58.642 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$e7dcad30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:58.749 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:58.835 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c22bf8d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:58.842 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:58.844 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:58.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$589d8803] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:58.867 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c41d89ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.221 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$bce24100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.237 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$aa24e412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.329 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.335 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9665f49d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.344 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.346 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-11-19 17:12:59.353 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-11-19 17:12:59.532 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-11-19 17:12:59.533 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-11-19 17:12:59.533 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-11-19 17:12:59.533 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-11-19 17:12:59.533 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.543 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:12:59.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.093 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.099 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.123 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.212 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.213 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.215 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.265 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.290 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'studentInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.StudentInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b4310794] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$667dc9ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.329 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$2194af9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.335 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.337 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$486026ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.346 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.348 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$963ca523] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.360 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.367 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.369 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.386 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.398 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.402 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.402 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.408 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.419 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-19 17:13:00.731 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-11-19 17:13:00.742 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-11-19 17:13:00.747 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-11-19 17:13:00.747 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-11-19 17:13:00.752 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\办公软件\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-11-19 17:13:00.910 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-19 17:13:00.910 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3352 ms
2022-11-19 17:13:01.428 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-11-19 17:13:01.428 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-11-19 17:13:01.429 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-11-19 17:13:01.429 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-11-19 17:13:01.429 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-11-19 17:13:01.429 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-11-19 17:13:01.429 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-11-19 17:13:01.429 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-11-19 17:13:01.900 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-11-19 17:13:01.910 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-11-19 17:13:01.910 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-11-19 17:13:01.913 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-11-19 17:13:01.915 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-11-19 17:13:01.916 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1668849181901'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-11-19 17:13:01.916 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-11-19 17:13:01.916 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-11-19 17:13:01.917 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@14b9df65
2022-11-19 17:13:01.989 febs [main] INFO  p6spy - 2022-11-19 17:13:01 | 耗时 27 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-11-19 17:13:02.611 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-11-19 17:13:03.773 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-11-19 17:13:03.828 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-11-19 17:13:03.902 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-11-19 17:13:03.914 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-11-19 17:13:03.924 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-11-19 17:13:03.925 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-11-19 17:13:03.936 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-11-19 17:13:03.939 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.025 seconds (JVM running for 7.918)
2022-11-19 17:13:03.948 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-11-19 17:13:03.950 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-11-19 17:13:03.950 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-11-19 17:13:04.002 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 26 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-11-19 17:13:04.010 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:13:04.068 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-11-19 17:13:04.083 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-11-19 17:13:04.097 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-11-19 17:13:04.101 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:13:04.103 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-11-19 17:13:04.106 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-11-19 17:13:04.109 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-11-19 17:13:04.111 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:13:04.113 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-11-19 17:13:04.116 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-11-19 17:13:04.117 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-11-19 17:13:04.120 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:13:04.123 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2022-11-19 17:13:04.125 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2022-11-19 17:13:04.127 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-11-19 17:13:04.129 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:13:04.131 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-11-19 17:13:04.133 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-11-19 17:13:04.134 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-11-19 17:13:04.136 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:13:04.139 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi';
2022-11-19 17:13:04.141 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-11-19 17:13:04.143 febs [main] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-11-19 17:13:04.143 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-11-19 17:13:04.143 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-11-19 17:13:04.143 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-11-19 17:13:04.143 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-11-19 17:13:04.143 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-11-19T17:13:04.143
2022-11-19 17:13:04.372 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-11-19 17:13:04.372 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-11-19 17:13:04.384 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-11-19 17:13:04.663 febs [RMI TCP Connection(3)-192.168.1.5] INFO  p6spy - 2022-11-19 17:13:04 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-11-19 17:13:04.916 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-11-19 17:13:04.950 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-11-19 17:13:04.950 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1668849099411"'s failed in-progress jobs.
2022-11-19 17:13:04.972 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1668849181901 started.
2022-11-19 17:13:24.256 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 17:13:24.362 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T17:13:24.335+0800' WHERE username = 'jack';
2022-11-19 17:13:24.367 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:13:24.400 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'jack', '2022-11-19T17:13:24.391+0800', '', '127.0.0.1' );
2022-11-19 17:13:24.501 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:13:24.523 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack') order by m.order_num;
2022-11-19 17:13:24.809 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:13:24.809 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:13:24.822 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:13:24.831 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 18 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:13:24.832 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 12;
2022-11-19 17:13:24.832 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:13:24.833 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:13:24.835 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:13:24.835 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:13:24.837 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'jack' group by days;
2022-11-19 17:13:24.837 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:13:24.841 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:13:24.843 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:13:24.846 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:13:24.871 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:13:24.882 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 1 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '1';
2022-11-19 17:13:24.887 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND oi.user_id = '1' GROUP BY days ORDER BY days ASC;
2022-11-19 17:13:24.892 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '1';
2022-11-19 17:13:24.897 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:13:24 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:14:59.197 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:14:59 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-11-19 17:14:59.206 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:14:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-11-19 17:15:01.938 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:15:01 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'admi';
2022-11-19 17:15:02.033 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:15:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'admin';
2022-11-19 17:15:03.498 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:15:03 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'admin';
2022-11-19 17:15:05.741 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:15:05 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'admin';
2022-11-19 17:15:08.434 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:15:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'admin';
2022-11-19 17:15:12.079 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:15:12 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'admin';
2022-11-19 17:15:19.989 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 17:15:19.993 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:15:19 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T17:15:19.991+0800' WHERE username = 'admin';
2022-11-19 17:15:19.998 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:15:19 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:15:20.013 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-11-19T17:15:20.008+0800', '', '127.0.0.1' );
2022-11-19 17:15:20.038 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:20.043 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-11-19 17:15:20.337 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:20.337 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:20.352 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 13 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:15:20.356 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:15:20.358 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:15:20.362 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:15:20.364 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:15:20.365 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:15:20.389 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 50 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:15:20.391 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:15:20.393 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:15:20.395 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:15:20.397 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:15:20 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-11-19 17:15:32.882 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:32.963 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:15:32 | 耗时 24 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2022-11-19 17:15:32.968 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:15:32 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2022-11-19 17:15:35.198 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:35.204 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:15:35 | 耗时 1 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1647838570459';
2022-11-19 17:15:38.162 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:38.165 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:15:38 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1648009157208';
2022-11-19 17:15:44.185 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:44.188 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:15:44 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1647872344998';
2022-11-19 17:15:46.732 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:46.734 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:46.737 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:15:46 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:15:46.738 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:46.741 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:15:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-11-19 17:15:46.742 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:15:46 | 耗时 1 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info;
2022-11-19 17:15:46.742 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:15:46 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-11-19 17:15:46.743 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:46.746 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:15:46 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:15:58.975 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:15:58.990 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:15:58 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM stock_out so LEFT JOIN student_info si ON (si.id = so.user_id) WHERE 1 = 1;
2022-11-19 17:15:58.991 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:15:58 | 耗时 0 ms | SQL 语句：
SELECT so.id, so.num, so.user_id AS userId, so.price, so.custodian, so.handler, so.create_date AS createDate, so.apply_id AS applyId, si.`name` AS userName, si.team FROM stock_out so LEFT JOIN student_info si ON ( si.id = so.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-11-19 17:16:02.271 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:02.272 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:16:02 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'OUT-1648004192010';
2022-11-19 17:16:06.635 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:06.637 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:16:06 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'OUT-1668846050080';
2022-11-19 17:16:09.109 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:09.112 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:16:09 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'OUT-1647925932291';
2022-11-19 17:16:10.623 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:10.626 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:16:10 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'OUT-1647925955976';
2022-11-19 17:16:13.031 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:13.031 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:13.035 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:16:13 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:16:13.058 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:16:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0;
2022-11-19 17:16:13.060 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:16:13 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, si.is_in, si.to_user_id, cy.`name` AS consumableName FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0 LIMIT 0,10;
2022-11-19 17:16:22.833 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:22.833 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:22.836 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-11-19 17:16:22 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:16:22.857 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:16:22 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM combo_info;
2022-11-19 17:16:22.857 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:16:22 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,content,create_date FROM combo_info LIMIT 0,10;
2022-11-19 17:16:28.099 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:28.099 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:28.102 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:16:28 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:16:28.104 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:16:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0;
2022-11-19 17:16:28.105 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:16:28 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, si.is_in, si.to_user_id, cy.`name` AS consumableName FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0 LIMIT 0,10;
2022-11-19 17:16:29.747 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:29.751 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:16:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_out so LEFT JOIN student_info si ON (si.id = so.user_id) WHERE 1 = 1;
2022-11-19 17:16:29.753 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:16:29 | 耗时 0 ms | SQL 语句：
SELECT so.id, so.num, so.user_id AS userId, so.price, so.custodian, so.handler, so.create_date AS createDate, so.apply_id AS applyId, si.`name` AS userName, si.team FROM stock_out so LEFT JOIN student_info si ON ( si.id = so.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-11-19 17:16:34.732 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:34.732 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:34.732 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:34.734 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-11-19 17:16:34 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info;
2022-11-19 17:16:34.734 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:16:34 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:16:34.736 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:16:34 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2022-11-19 17:16:34.738 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:16:34 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2022-11-19 17:16:34.740 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:34.742 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:16:34 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:16:52.387 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:52.410 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:16:52 | 耗时 17 ms | SQL 语句：
SELECT COUNT(1) FROM consumable_type;
2022-11-19 17:16:52.411 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:16:52 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type LIMIT 0,10;
2022-11-19 17:16:54.216 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:54.246 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:16:54 | 耗时 18 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2022-11-19 17:16:54.247 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:16:54 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2022-11-19 17:16:55.555 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:16:55.562 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:16:55 | 耗时 6 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'RUR-1647868056401';
2022-11-19 17:17:04.735 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:17:04.747 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:17:04 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM student_info si LEFT JOIN t_user tu ON (tu.USER_ID = si.user_id) WHERE 1 = 1;
2022-11-19 17:17:04.749 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:17:04 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.team, si.user_id AS userId, si.content, si.create_date AS createDate, tu.USERNAME AS userName, tu.`STATUS` AS accountStatus, tu.LAST_LOGIN_TIME AS lastTime FROM student_info si LEFT JOIN t_user tu ON ( tu.USER_ID = si.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-11-19 17:17:10.781 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:17:10.793 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:17:10 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2022-11-19 17:17:10.794 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:17:10 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 LIMIT 0,10;
2022-11-19 17:17:13.152 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:17:13.159 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:17:13 | 耗时 4 ms | SQL 语句：
SELECT gb.id, gb.`name`, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName, IFNULL( si.amount, 0 ) AS amountStock FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) LEFT JOIN stock_info si ON ( si.`name` = gb.`name` ) AND si.is_in = 0 WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-11-19 17:17:38.557 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-11-19 17:17:38.567 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 5 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-11-19T17:17:38.559+0800' WHERE username = 'lisi';
2022-11-19 17:17:38.571 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'lisi' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-11-19 17:17:38.584 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'lisi', '2022-11-19T17:17:38.579+0800', '', '127.0.0.1' );
2022-11-19 17:17:38.598 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'lisi' and m.perms is not null and m.perms <> '';
2022-11-19 17:17:38.609 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:17:38.612 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'lisi') order by m.order_num;
2022-11-19 17:17:38.778 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:17:38.778 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:17:38.782 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 2 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-11-19 17:17:38.784 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
SELECT ID,name,team,user_id,content,create_date FROM student_info WHERE user_id = 15;
2022-11-19 17:17:38.787 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2022-11-19 17:17:38.789 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2022-11-19 17:17:38.791 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2022-11-19 17:17:38.792 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2022-11-19 17:17:38.794 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2022-11-19 17:17:38.816 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 35 ms | SQL 语句：
select count(1) from t_login_log;
2022-11-19 17:17:38.817 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:17:38.819 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-11-19 17:17:38.821 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-11-19 17:17:38.823 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'lisi' group by days;
2022-11-19 17:17:38.865 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:17:38.875 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 5 ms | SQL 语句：
SELECT ID,num,user_id,price,custodian,handler,create_date,apply_id FROM stock_out WHERE user_id = '2';
2022-11-19 17:17:38.877 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM( oi.price ), 0 ) AS orderPrice FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN stock_out oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND oi.user_id = '2' GROUP BY days ORDER BY days ASC;
2022-11-19 17:17:38.879 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE to_user_id = '2';
2022-11-19 17:17:38.882 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:17:38 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:17:48.230 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:17:48.236 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:17:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 17:17:48.237 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:17:48 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 17:17:59.585 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:17:59.585 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:17:59.588 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-11-19 17:17:59 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2022-11-19 17:17:59.590 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:17:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN student_info stu ON (stu.id = si.to_user_id) LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15;
2022-11-19 17:17:59.592 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-11-19 17:17:59 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableName FROM stock_info si LEFT JOIN student_info stu ON ( stu.id = si.to_user_id ) LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 2 AND stu.user_id = 15 LIMIT 0,10;
2022-11-19 17:18:01.680 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:18:01.685 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:18:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN student_info si ON (si.id = gr.user_id) WHERE 1 = 1 AND si.user_id = 15;
2022-11-19 17:18:01.687 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-11-19 17:18:01 | 耗时 0 ms | SQL 语句：
SELECT gr.id, gr.num, gr.user_id AS userId, gr.content, gr.process, gr.step, gr.create_date AS createDate, si.`name`, si.team FROM goods_request gr LEFT JOIN student_info si ON ( si.id = gr.user_id ) WHERE 1 = 1 AND si.user_id = 15 LIMIT 0,10;
2022-11-19 17:18:04.499 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:18:04.502 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-11-19 17:18:04 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1648003352384';
2022-11-19 17:18:06.465 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:18:06.468 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-11-19 17:18:06 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
2022-11-19 17:18:08.026 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-11-19 17:18:08.028 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-11-19 17:18:08 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'REQ-1647996946171';
